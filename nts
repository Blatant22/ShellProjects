#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - nts (Note to Self)
# Started On        - Sun 10 Nov 23:54:20 GMT 2019
# Last Change       - Mon 11 Nov 00:28:49 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# Work in progress...
#----------------------------------------------------------------------------------

_VERSION_="2019-11-11"
_PROJECT_="${0##*/}"

FAIL(){
	printf "[L%0.4d] ERROR: %s\n" "$2" "$3" 1>&2
	[ $1 -eq 1 ] && exit 1
}

DOM="https://github.com"

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            ${_PROJECT_^^} - Note to Self ($_VERSION_)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Dummy description for this template.

		SYNTAX:     $_PROJECT_ [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --update|-U             - Check for updates to $_PROJECT_.
		            --debug|-D              - Enables the built-in bash debugging.

		SITE:       $DOM/terminalforlife/Extra
	EOF
}

while [ "$1" ]; do
	case "$1" in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"; exit 0 ;;
		--quiet|-q)
			BEQUIET="true" ;;
		--update|-U)
			UPDATE="true" ;;
		--debug|-D)
			DEBUGME="true" ;;
		*)
			FAIL 1 "$LINENO" "Incorrect argument(s) specified." ;;
	esac
	shift
done

declare -i DEPCOUNT=0
for DEP in mkdir; {
	if ! type -fP "$DEP" > /dev/null 2>&1; then
		FAIL 0 "$LINENO" "Dependency '$DEP' not met."
		DEPCOUNT+=1
	fi
}

[ $DEPCOUNT -eq 0 ] || exit 1

if [ "$UPDATE" == "true" ]; then
	if ! type -fP wget > /dev/null 2>&1; then
		FAIL 1 "$LINENO" "Dependency 'wget' not met."
	fi

	VERSION_URL="$DOM/terminalforlife/Extra/raw/master/versions"
	while IFS='=' read -a LINE; do
		if  [ "${LINE[0]}" == "$_PROJECT_" ]; then
			LATEST="${LINE[1]}"

			if [[ "${LATEST//-}" =~ ^[0-9]{8}$ ]]; then
				if [ ${LATEST//-} -gt ${_VERSION_//-} ]; then
					while read -r; do
						printf "%s\n" "$REPLY"
					done <<-EOF
						New version available:    $LATEST
						Current version:          $_VERSION_
					EOF
				fi
			else
				FAIL 1 "$LINENO" "Failed to check for available updates."
			fi
		fi
	done <<< "$(wget -q "$VERSION_URL" -O -)"

	exit 0
fi

[ "$DEBUGME" == "true" ] && set -x

MAIN_DIR="$HOME/.config/nts"
DB="$MAIN_DIR/db"

if ! [ -d "$MAIN_DIR" ]; then
	mkdir -p "$MAIN_DIR" || FAIL 1 "$LINENO" "Unable to make 'nts' directory."
fi

if ! [ -f "$DB" ]; then
	> "$DB" || FAIL 1 "$LINENO" "Unable to generate a database."
else
	if ! [ -r "$DEB" ]; then
		FAIL 1 "$LINENO" "Unable to read the database."
	fi
fi

PARSEDB(){
	:
}
