#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - Extra/roks (inspired by purge-old-kernels)
# Started On        - Sun 17 Sep 23:32:47 BST 2017
# Last Change       - Fri  1 Nov 19:26:18 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

_VERSION_="2019-11-01"
_PROJECT_="${0##*/}"

FAIL(){
	printf "[L%0.4d] ERROR: %s\n" "$2" "$3" 1>&2
	[ $1 -eq 1 ] && exit 1
}

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            ${_PROJECT_^^} - Remove Old Kernels ($_VERSION_)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Remove old kernel versions on an Ubuntu- or Debian-based system.

		SYNTAX:     $_PROJECT_ [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --quiet|-q              - Disable all STDOUT and STDERR output.
		            --debug|-D              - Enables the built-in bash debugger.
		            --keep|-k N             - Where N is the number of kernels to keep.
		                                      The default is 2, which is recommended.
		            --type X                - Where X is the type of kernel, such as
		                                      generic, lowlatency, aws, gke, etc. The
		                                      default is to disregard the type.
		            --purge                 - Don't just remove; purge the blighters.

		NOTE:      Written as an improvement over the now-deprecated script called
		           'purge-old-kernels' found in the byobu package. This small program will
		           clear out your system of old kernel versions on an Ubuntu- or
		           Debian-based system.

		           Unrecognised short or long flags will be passed to apt or apt-get.

		           As of 2019-03-31, $_PROJECT_ no longer supports handling older kernel versions
		           in Debian- or Ubuntu-based systems. I recommend taking extra care when
		           using $_PROJECT_ on systems with kernels older than 4.15; it might work, but
		           not necessarily as intended.
	EOF
}

NUM_TO_KEEP=2

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"
			exit 0 ;;
		--quiet|-q)
			exec > /dev/null 2>&1 ;;
		--debug|-D)
			DEBUG_MODE="true" ;;
		--keep|-k)
			shift
			if [[ "$1" =~ [0-9]+ ]]; then
				if [ $1 -eq 0 ]; then
					FAIL 1 "$LINENO" "Invalid number of kernels selected."
				else
					declare -i NUM_TO_KEEP=$1
				fi
			else
				FAIL 1 "$LINENO" "Invalid expression specified."
			fi ;;
		--type)
			shift; KTYPE="-${1}" ;;
		--purge)
			PURGE="--purge" ;;
		-*|--*)
			APTGETOPTS+=" $1" ;;
		*)
			FAIL 1 "$LINENO" "Incorrect argument(s) provided." ;;
	esac
	shift
done

declare -i DEPCOUNT=0
for DEP in apt-get linux-version; {
	if ! type -fP "$DEP" > /dev/null 2>&1; then
		FAIL 0 "$LINENO" "Dependency '$DEP' not met."
		DEPCOUNT+=1
	fi
}

[ $DEPCOUNT -eq 0 ] || exit 1

[ "$DEBUG_MODE" == "true" ] && set -x

if [ -f /proc/version -a -r /proc/version ]; then
	read -a X < /proc/version
	printf -v CKERN "%s" "${X[2]}"
elif ! type -fP uname > /dev/null 2>&1; then
	CKERN=`uname -r`
else
	FAIL 1 "$LINENO" "Unable to determine current kernel version."
fi

if ! [ $UID -eq 0 ]; then
	FAIL 1 "$LINENO" "Root access is required for system-wide changes."
fi

NUM_TO_KEEP+=2
KLIST=`linux-version list`
if ! [ "$KLIST" ]; then
	FAIL 1 "$LINENO" "No kernels were found."
elif ! [ "$KLIST" ]; then
	FAIL 1 "$LINENO" "No kernels were selected for removal."
else
	declare -a TO_GO=()
	for LOOP in $KLIST; {
		[ -n "$KTYPE" ] && LOOP="${LOOP%-*}${KTYPE}"
		if ! [ "$LOOP" == "$CKERN" ]; then
			TO_GO+="${LOOP%-*}${KTYPE}"
		fi
	}

	apt-get -q $APTGETOPTS -o Dpkg::Progress=true\
		-o Dpkg::Progress-Fancy=true remove $PURGE ${TO_GO[@]}

	if [ $? -ne 0 ]; then
		FAIL 1 "$LINENO" "Non-zero exit status while removing old kernels."
	fi
fi

