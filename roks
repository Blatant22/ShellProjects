#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - Extra/roks (inspired by purge-old-kernels)
# Started On        - Sun 17 Sep 23:32:47 BST 2017
# Last Change       - Tue  3 Dec 14:19:42 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

CurVer='2019-12-03'
Progrm=${0##*/}

Err(){
	printf "[L%0.4d] ERROR: %s\n" "$2" "$3" 1>&2
	[ $1 -gt 0 ] && exit $1
}

Usage(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            ${Progrm^^} ($CurVer)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Remove old kernel versions on an Ubuntu- or Debian-based system.

		SYNTAX:     $Progrm [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --quiet|-q              - Disable STDOUT. Errors still output.
		            --debug|-D              - Enables the built-in bash debugger.
		            --keep|-k N             - Where N is the number of kernels to keep.
		                                      The default is 2, which is recommended.
		            --type X                - Where X is the type of kernel, such as
		                                      generic, lowlatency, aws, gke, etc. The
		                                      default is to disregard the type.
		            --purge                 - Don't just remove; purge the blighters.

		NOTE:      Written as an improvement over the now-deprecated script called
		           'purge-old-kernels' found in the byobu package. This small program will
		           clear out your system of old kernel versions on an Ubuntu- or
		           Debian-based system.

		           Unrecognised short or long flags will be passed to apt or apt-get.

		           As of 2019-03-31, $Progrm no longer supports handling older kernel versions
		           in Debian- or Ubuntu-based systems. I recommend taking extra care when
		           using $Progrm on systems with kernels older than 4.15; it might work, but
		           not necessarily as intended.
	EOF
}

KernelKeep=2

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf "%s\n" "$CurVer"
			exit 0 ;;
		--quiet|-q)
			exec > /dev/null ;;
		--debug|-D)
			DebugMe='true' ;;
		--keep|-k)
			shift
			if [[ $1 =~ [0-9]+ ]]; then
				if [ $1 -eq 0 ]; then
					Err 1 $LINENO "Invalid number of kernels selected."
				else
					declare -i KernelKeep=$1
				fi
			else
				Err 1 $LINENO "Invalid expression specified."
			fi ;;
		--type)
			shift; KernType="-${1}" ;;
		--purge)
			DoPurge="--purge" ;;
		-*|--*)
			AptGetOpts+=" $1" ;;
		*)
			Err 1 $LINENO "Incorrect argument(s) provided." ;;
	esac
	shift
done

declare -i DepCount=0
for CurDep in uname apt-get linux-version; {
	if ! type -fP "$CurDep" > /dev/null 2>&1; then
		Err 0 $LINENO "Dependency '$CurDep' not met."
		DepCount+=1
	fi
}

[ $DepCount -eq 0 ] || exit 1

[ "$DebugMe" == 'true' ] && set -x

if [ -f /proc/version -a -r /proc/version ]; then
	read -a X < /proc/version
	printf -v CurrentKern "%s" "${X[2]}"
elif ! type -fP uname > /dev/null 2>&1; then
	CurrentKern=`uname -r`
else
	Err 1 $LINENO "Unable to determine current kernel version."
fi

if ! [ $UID -eq 0 ]; then
	Err 1 $LINENO "Root access is required for system-wide changes."
fi

KernelKeep+=2
KernList=`linux-version list`
if ! [ "$KernList" ]; then
	Err 1 $LINENO "No kernels were found."
elif ! [ "$KernList" ]; then
	Err 1 $LINENO "No kernels were selected for removal."
else
	declare -a KernsRemove=()
	for CurIter in $KernList; {
		[ -n "$KernType" ] && CurIter=${CurIter%-*}${KernType}
		if ! [ "$CurIter" == "$CurrentKern" ]; then
			KernsRemove+=${CurIter%-*}${KernType}
		fi
	}

	apt-get $AptGetOpts -o Dpkg::Progress=true\
		-o Dpkg::Progress-Fancy=true remove $DoPurge ${KernsRemove[@]}

	if [ $? -ne 0 ]; then
		Err 1 $LINENO "Non-zero exit status while removing old kernels."
	fi
fi

