#!/usr/bin/env bash

#----------------------------------------------------------------------------------
# Project Name      - Extra/swap-file
# Started On        - Sat 27 Jan 11:49:19 GMT 2018
# Last Change       - Mon 11 Nov 22:40:30 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# This is an early work in progress; don't yet run on your production machines!
#----------------------------------------------------------------------------------

_VERSION_="2019-11-11"
_PROJECT_="${0##*/}"

FAIL(){
	printf "[L%0.4d] ERROR: %s\n" "$2" "$3" 1>&2
	[ $1 -eq 1 ] && exit 1
}

DOM="https://github.com"

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            ${_PROJECT_^^} ($_VERSION_)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Dummy description for this template.

		SYNTAX:     $_PROJECT_ [OPTS] [NAME] [SIZE]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --update|-U             - Check for updates to $_PROJECT_.
		            --debug|-D              - Enables the built-in bash debugging.

		NOTE:       Where NAME is the swap file name to be created in /; the file name must
		            be alphanumeric and without any spaces.

		            Where SIZE is the size of the swap file to create, in MB.

		FILE:       The '/etc/fstab' file is by default edited.

		SITE:       $DOM/terminalforlife/Extra
	EOF
}

while [ "$1" ]; do
	case "$1" in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"
			exit 0 ;;
		--debug|-D)
			DEBUGME="true" ;;
		-*)
			FAIL 1 "$LINENO" "Incorrect argument(s) specified." ;;
		*)
			break ;;
	esac
	shift
done

FST="/etc/fstab"
NAME="/${1//[!_-.[:alnum:]]}"
SIZE="${2//[!0-9]}"

declare -i DEPCOUNT=0
for DEP in sync cp ch{own,mod} sed dd swap{on,off} mkswap; {
	if ! type -fP "$DEP" > /dev/null 2>&1; then
		FAIL 0 "$LINENO" "Dependency '$DEP' not met."
		DEPCOUNT+=1
	fi
}

[ $DEPCOUNT -eq 0 ] || exit 1

[ $# -eq 2 ] || FAIL 1 "$LINENO" "Incorrect argument(s) specified."
[[ "$SIZE" =~ [0-9]+ ]] || FAIL 1 "$LINENO" "Incorrect swap file size specified."

[ $UID -eq 0 ] || FAIL 1 "$LINENO" "Setting up a swap file requires root access."

[ "$DEBUGME" == "true" ] && set -x

if [ -f "$NAME" ]; then
	while read -e -p "File '$NAME' already exists -- replace? "; do
		case "$REPLY" in
			[Yy])
				break ;;
			[Nn])
				printf "No action taken -- quitting.\n"; exit 1 ;;
			*)
				FAIL 1 "$LINENO" "Invalid response. Enter 'Y' or 'N' to continue." ;;
		esac
	done
fi

printf "Creating %dMB swap file: %s\n" "$SIZE" "$NAME"
dd if=/dev/zero of="$NAME" bs=1024K count="$SIZE"
sync "$NAME"

chown -v 0:0 "$NAME"
chmod -v 600 "$NAME"
LIBBLKID_DEBUG='all' mkswap "$NAME"
#TODO - Why does mkswap fail here, saying it can't read the swap header? Yet when
#       I run the command separately on the terminal, all is fine.

cp -iv "$FST"{,.bak}

printf "Updating the file system table: %s\n" "$FST"
sed -i '/^UUID=.*\s.*\sswap/s/^/#/' "$FST"

if [ -f "$FST" ]; then
	while read; do
		if [[ "$REPLY" =~ /"$NAME"\s+none\s+swap\s+sw\s+0\s+0 ]]; then
			FOUND='true'; break
		fi
	done < "$FST"

	if [ "$FOUND" == 'true' ]; then
		FAIL 1 "$LINENO" "Current entry already present in: $FST"
	else
		printf "/%s none swap sw 0 0\n" "$NAME" >> "$FST" >&-
	fi
else
	FAIL 1 "$LINENO" "Unable to find or access: $FST"
fi

LIBBLKID_DEBUG='all' swapoff -va
LIBBLKID_DEBUG='all' swapon -v "$NAME"

# vim: ft=sh noexpandtab colorcolumn=84 tabstop=8 noswapfile nobackup
