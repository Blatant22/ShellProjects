#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - miscellaneous/ccfiles (Cross-Check Files)
# Started On        - Wed 13 Dec 13:45:22 GMT 2017
# Last Change       - Tue 16 Apr 11:23:19 BST 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# An idea which I'm hoping will successfully turn into a useful yet simple tool.
#
# NOTE: The original plan was to have a tool to check the files installed by
#       packages which use dpkg (or apt/apt-get?), in an attempt to see if any
#       executables are loaded (via /proc) and thus potentially unwanted, but it
#       seems to have gone a different direction.
#----------------------------------------------------------------------------------

_VERSION_="2019-04-16"

XERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; exit 1; }
ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }

DIR="/var/lib/dpkg/info"

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            CCFILES ($_VERSION_)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Cross-check files installed by dpkg.

		SYNTAX:     ccfiles [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --quiet|-q              - Runs in quiet mode. Errors still output.
		            --debug|-D              - Enables the built-in bash debugging.
		            --nopause|-P            - Do not pause upon WARNING discovery.
		            --nobell|-B             - Do not sound a bell upon WARNING discovery.

		FILES:      $DIR/*.list
	EOF
}

while [ -n "$1" ]; do
	case "$1" in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--debug|-D)
			DEBUGME="true" ;;
		--quiet|-q)
			BEQUIET="true" ;;
		--nopause|-N)
			NOPAUSE="true" ;;
		--nobell|-B)
			NOBELL="true" ;;
		*)
			XERR "$LINENO" "Incorrect argument(s) specified." ;;
	esac

	shift
done

[ -x /bin/readlink ] || XERR "$LINENO" "Dependency '/bin/readlink' not met."

[ "$BEQUIET" == "true" ] && exec 1> /dev/null
[ "$DEBUGME" == "true" ] && set -x

#TODO - Check for Debian/Ubuntu base.

if [ -d $DIR/ ]; then
	for FILE in $DIR/*.list; {
		while read -r; do
			for EXE in /proc/*/exe; {
				RESOLVED=`/bin/readlink --quiet "$EXE"`

				if ! [ -x "$RESOLVED" ]; then
					if ! [ "$NOBELL" == "true" ]; then
						printf "WARNING: %s\n" "$RESOLVED"
					else
						printf "\aWARNING: %s\n" "$RESOLVED"
					fi

					if ! [ "$NOPAUSE" == "true" ]; then
						read -n 1 -s -p "Press any key to continue... "
					fi
				else
					printf "CHECKING: %s\n" "$RESOLVED"
				fi
			}
		done < "$FILE"
	}
else
	XERR "$LINENO" "Directory '$DIR' not found."
fi
