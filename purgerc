#!/bin/sh

#----------------------------------------------------------------------------------
# Project Name      - Extra/purgerc
# Started On        - Fri 18 May 23:07:54 BST 2018
# Last Change       - Mon  2 Dec 22:44:05 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# This small Bourne tool was written to adhere to POSIX standards.
#----------------------------------------------------------------------------------

CurVer='2019-12-02'
Progrm=${0##*/}

Err(){
	printf "ERROR: %s\n" "$2" 1>&2
	[ $1 -gt 0 ] && exit $1
}

Domain='https://github.com'

Usage(){
	while read -r CurLine; do
		printf "%b\n" "$CurLine"
	done <<-EOF
		\r            PURGERC ($CurVer)
		\r            Written by terminalforlife (terminalforlife@yahoo.com)

		\r            Small POSIX-adhering tool to purge only 'rc' packages.

		\rSYNTAX:     $Progrm [OPTS]

		\rOPTS:       --help|-h|-?            - Displays this help information.
		\r            --version|-v            - Output only the version datestamp.

		\rNOTE:       If executed without root permissions, simulation mode is used.
	EOF
}

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf "%s\n" "$CurVer"; exit 0 ;;
		*)
			Err 1 "Incorrect argument(s) specified." ;;
	esac
	shift
done

DepCount=0
for DEP in dpkg id apt-get; do
	if ! command -v "$DEP" 1> /dev/null 2>&1; then
		Err 0 "Dependency '$DEP' not met."
		DepCount=$((DepCount + 1))
	fi
done

[ $DepCount -eq 0 ] || exit 1

if ! [ ${UID:-`id -u`} -eq 0 ]; then
	printf "Running in simulation mode.\n"
	SIM='-s -o APT::Get::Show-User-Simulation-Note=0'
fi

dpkg -l | while read State Package Junk; do
	[ "$State" = 'rc' ] && RCPackages+=" $Package"
done

if [ "$RCPackages" ]; then
	apt-get -q $SIM -o Dpkg::Progress=true\
		-o Dpkg::Progress-Fancy=true -o APT::Get::AutomaticRemove=true\
		remove --purge $RCPackages
else
	printf "No 'rc' packages detected by APT.\n" 1>&2
	exit 1
fi
