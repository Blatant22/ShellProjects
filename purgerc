#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - miscellaneous/purgerc
# Started On        - Fri 18 May 23:07:54 BST 2018
# Last Change       - Fri 26 Apr 14:45:25 BST 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

_VERSION_="2019-04-26"

XERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; exit 1; }
ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }

DOM="https://github.com"

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            PURGERC ($_VERSION_)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Very simple and light shell command to remove 'rc' packages.

		SYNTAX:     purgerc [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --quiet|-q              - Runs in quiet mode. Errors still output.
		            --update|-U             - Check for updates to simplify-ubuntu.

		SITE:       $DOM
	EOF
}

while [ "$1" ]; do
	case "$1" in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"
			exit 0 ;;
		--quiet|-q)
			BEQUIET="true" ;;
		--update|-U)
			UPDATE="true" ;;
		*)
			XERR "$LINENO" "Incorrect argument(s) specified." ;;
	esac
	shift
done

declare -i DEPCOUNT=0
for DEP in /usr/bin/{wget,dpkg,apt-get}; {
	if ! [ -x "$DEP" ]; then
		ERR "$LINENO" "Dependency '$DEP' not met."
		DEPCOUNT+=1
	fi
}

[ $DEPCOUNT -eq 0 ] || exit 1

read -a WGET_VER_LINE <<< "$(/usr/bin/wget --version)"
WGET_VERSION=0${WGET_VER_LINE[2]//[!0-9]}
if [ $WGET_VERSION -ge 01192 -a $WGET_VERSION -lt 01194 ]; then
	NOWARC="--no-warc-compression"
fi

if [ "$UPDATE" == "true" ]; then
	VERSION_URL="$DOM/terminalforlife/miscellaneous/raw/master/purgerc-version"
	LATEST=`/usr/bin/wget $NOWARC -q "$VERSION_URL" -O -`
	if [[ "${LATEST//-}" =~ ^[0-9]{8}$ ]]; then
		if [ ${LATEST//-} -gt ${_VERSION_//-} ]; then
			while read -r; do
				printf "%s\n" "$REPLY"
			done <<-EOF
				New version available:    $LATEST
				Current version:          $_VERSION_
			EOF
		fi
	else
		XERR "$LINENO" "Failed to check for available updates."
	fi

	exit 0
fi

[ $UID -eq 0 ] || XERR "$LINENO" "Root access is required to purge 'rc' packages."

[ "$BEQUIET" == "true" ] && exec >&-
[ "$DEBUGME" == "true" ] && set -x

while read -a X; do
	[ "${X[0]}" == "rc" ] && LIST+=" ${X[1]}"
done <<< "$(/usr/bin/dpkg -l)"

if [ "$LIST" ]; then
	/usr/bin/apt-get -q -o Dpkg::Progress=true -o Dpkg::Progress-Fancy=true\
		-o APT::Get::AutomaticRemove=true remove --purge $LIST
else
	printf "No 'rc' packages detected by APT.\n" 1>&2
	exit 1
fi
