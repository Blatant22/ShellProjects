#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - miscellaneous/install\ 4.13.5_64-bit\ \(Ubuntu\)
# Started On        - Sun  5 Nov 20:46:28 GMT 2017
# Last Change       - Sun  5 Nov 23:20:28 GMT 2017
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

# You can use this script by running the following, one line at a time:
#
# A="terminalforlife/miscellaneous/master/install%204.13.5_64-bit%20(Ubuntu)"
# wget -q "https://raw.githubusercontent.com/$A" -O /tmp/4.13.5_64-bit_${$}.tmp
# chmod u+x !$ && sudo !$ && rm !$ && unset A
#
# ...or do it manually, if you prefer.

#----------------------------------------------------------------------------------

USAGE(){ printf "OPTS: --help|-h|-?, --no-check|-N, --version|-V DEB\n"; }
XERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; exit 1; }
ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }

declare -i DEPCOUNT=0
for DEP in /sbin/reboot /bin/{mkdir,rm,sync} /usr/bin/{wget,dpkg}; {
	[ -x "$DEP" ] || {
		ERR "$LINENO" "Dependency '$DEP' not met."
		DEPCOUNT+=1
	}
}

[ $DEPCOUNT -eq 0 ] || exit 1

URL="http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.13.5"
VER="4.13.5-041305-generic"

OS_CHECK_FUNC(){
	[ -f /etc/os-release ] || ERR "$LINENO" "Cannot determine your LSB."
	mapfile Y < /etc/os-release
	printf -v LSB "%s" "${Y[2]/*=}"
	
	[ "${LSB%?}" == "linuxmint" ] || {
		ERR "$LINENO" "This script was written for Linux Mint 18.2."
	}
}

while [ -n "$1" ]; do
	case "$1" in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--no-check|-N)
			OS_CHECK_VAR="false" ;;
		--version|-V)
			shift
			VER="$1" ;;
		*)
			USAGE; exit 1 ;;
	esac

	shift
done

[ "$OS_CHECK_VAR" == "false" ] || OS_CHECK_FUNC

while read X; do
	printf "%s\n" "$X"
done <<-EOF

	---------------------------------------------------------------------------
	!! WARNING !! Kernel version not officially supported. !! WARNING !!

	Version to Install:

	  $VER

	Inspired by:

	  https://forums.linuxmint.com/viewtopic.php?f=213&t=256282
	  https://www.dropbox.com/s/jxmkurqnye9fe99/Kernal%20Updater.sh?dl=0

	NOTE: Downloads from 'http://kernel.ubuntu.com', using wget.

	Will you continue with the installation of this kernel version? If you are
	sure, then enter "Yes, install!" exactly like that, by the prompt below...
	---------------------------------------------------------------------------

EOF

read -e -p "ANSWER: " ANSWER

[ $UID -eq 0 ] || XERR "$LINENO" "Root access is required for this operation."

MAIN(){
	for DEB in\
	\
		"$URL"/linux-headers-${VER%-generic}_4.13.5-041305.201710050600_all.deb\
		"$URL"/linux-headers-${VER}_4.13.5-041305.201710050600_amd64.deb\
		"$URL"/linux-image-${VER}_4.13.5-041305.201710050600_amd64.deb
	{
		F="${DEB//*\/}"

		printf "DOWNLOAD: %s\n" "$F"
		/usr/bin/wget -cq --show-progress "$DEB" -O /tmp/"$F"

		# Scan for viruses, if you have clamav.
		[ -x /usr/bin/clamscan ] && {
			printf "SCAN: %s\n" "$F"
			/usr/bin/clamscan -i /tmp/"$F"
		}

		printf "INSTALL: %s\n" "$F"
		/usr/bin/dpkg -i /tmp/"$F"

		# Just in-case.
		printf "SYNC: %s\n" "$F"
		/bin/sync

		printf "CLEANUP: %s\n" "$F"
		/bin/rm /tmp/"$F"
	}
}

DONE(){
	while read X; do
		printf "%s\n" "$X"
	done <<-EOF

        	---------------------------------------------------------------------------
		Kernel '$VER' was downloaded and installed.

		NOTE:

		  If you have any issues booting back into your Linux machine, you can
		  choose an earlier kernel (one which works) from within the GRUB menu
		  before Linux Mint 18.2 loads up.

		UNINSTALL:

		  To remove this kernel version, run the following commands from within a
		  terminal using the BASH shell...

		    sudo apt-get purge --autoremove linux-{image-4.13.5\*}

		Would you like to restart the machine now?
		---------------------------------------------------------------------------
	
	EOF

	read -n 1 -p "ANSWER [Y/N]: " ANSWER

	case "$ANSWER" in
		[Yy])
			/sbin/reboot ;;
		[Nn])
			printf "You chose not to reboot the system.\n" ;;
	esac
}

case "$ANSWER" in
	Yes,\ install\!)
		MAIN
		DONE ;;
	*)
		printf "Installation cancelled.\n" ;;
esac
