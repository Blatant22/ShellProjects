#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - miscellaneous/snotes (Search Notes)
# Started On        - Fri  9 Feb 00:07:19 GMT 2018
# Last Change       - Fri  2 Mar 20:14:09 GMT 2018
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# This is a personal script I use to parse my shell notes. If you wished to use
# for your own nefarious gains, you must have a command(s) one per line. The end of
# where this file will process must have "#END", on its own, on a line. You can
# then quickly search your notes for a command you jotted down previously. This is
# a lot more useful than it sounds!
#
# Work in progress! Unfinished!
#----------------------------------------------------------------------------------

XERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; exit 1; }
ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            SNOTES - SEARCH NOTES (2nd March 2018)
		            Written by terminalforlife (terminalforlife@yahoo.com)
		
		SYNTAX:     snotes [OPTS] MATCH
		
		OPTS:       --help|-h|-?            - Displays this help information.
		            --debug|-D              - Enables the built-in bash debugging.
		            --file|-f PATH          - Specify and remember the notes file.
	EOF
}

while [ "$1" ]; do
	case "$1" in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--debug|-D)
			DEBUGME="true" ;;
		--file|-f)
			shift; FILE="$1" ;;
		-*)
			XERR "$LINENO" "Incorrect argument(s) specified." ;;
		*)
			break ;;
	esac

	shift
done

if [ "$2" ]; then
	XERR "$LINENO" "Argument error -- is your match correct?"
fi

if [ -f $HOME/.config/snotes.conf ]; then
	if [ "$FILE" ]; then
		read -n 1 -e -p "Notes file already exists -- replace? "
		if ! [[ "$REPLY" == [Yy] ]]; then
			printf "No action taken -- quitting.\n"
			exit 0
		else
			[ -d $HOME/.config ] || /bin/mkdir $HOME/.config
			printf "%q\n" "$FILE" > $HOME/.config/snotes.conf
		fi
	else
		FILE="$(< $HOME/.config/snotes.conf)"
	fi
else
	printf "$FILE\n" > $HOME/.config/snotes.conf
fi

if ! [ -f "$FILE" -a -r "$FILE" ]; then
	XERR "$LINENO" "Notes file inaccessible or not found."
else
	MATCH="$1"
	declare -i LINE_COUNT=0
	while read LINE; do
		LINE_COUNT+=1
		[ "$LINE" == "#END" ] && break
		if [[ "$LINE" =~ ^(|#.*)$ ]]; then
			continue
		elif [[ "$LINE" =~ $MATCH ]]; then
			if [ "$LINE_NUMBERS" == "true" ]; then
				printf "%4d  %s\n" "$LINE_COUNT" "$LINE"
			else
				printf "%s\n" "$LINE"
			fi
		fi
	done < "$FILE"
fi

# vim: noexpandtab colorcolumn=84 tabstop=8 noswapfile nobackup
