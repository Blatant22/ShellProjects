#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - Extra/capnum
# Started On        - Wed 31 Jan 23:35:19 GMT 2018
# Last Change       - Wed 27 Nov 15:53:57 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# Small tool which simply notifies you quickly if you have NumLock or CapsLock on.
# This will notify you every N number of 0. seconds, per the 1st positional
# parameter. Only numbers will be recognised, and they are in 0.N seconds.
#
# SYNTAX:     capnum N
#
# NOTE:       You may wish to make the number higher (3 works well) if you are on
#             a slower machine that gets visibly slower with too frequent a ping.
#
# I actually got the idea to write this from reading one of my very old and bizarre
# scripts I had written in an attempt to achieve this very result.
#----------------------------------------------------------------------------------

Err(){
	printf "[L%0.4d] ERROR: %s\n" "$2" "$3" 1>&2
	[ $1 -eq 1 ] && exit 1
}

declare -i DEPCOUNT=0
for DEP in sleep xset notify-send; {
	if ! type -fP "$DEP" > /dev/null 2>&1; then
		Err 0 $LINENO "Dependency '$DEP' not met."
		DEPCOUNT+=1
	fi
}

[ $DEPCOUNT -eq 0 ] || exit 1

[ $# -eq 1 ] || Err 1 $LINENO "Number of seconds in which to notify is required."
NOTIFY(){ notify-send --urgency=low --expire-time=20 "$1"; }

while :; do
	while read -a X; do
		if [ "${X[0]}" == "00:" -a "${X[1]}" == "Caps" ]; then
			printf -v S "%s:%s" "${X[3]}" "${X[7]}"

			if [ "${S/*:}" == "on" -a ! "$NL" == 'true' ]; then
				NOTIFY "NumLock enabled."
				NL='true'
			elif [ "${S/*:}" == "off" -a ! "$NL" == 'false' ]; then
				NOTIFY "NumLock disabled."
				NL='false'
			fi

			if [ "${S%:*}" == "on" -a ! "$CL" == 'true' ]; then
				NOTIFY "CapsLock enabled."
				CL='true'
			elif [ "${S%:*}" == "off" -a ! "$CL" == 'false' ]; then
				NOTIFY "CapsLock disabled."
				CL='false'
			fi

			break
		fi
	done <<< "$(xset q)"

	sleep 0.${1//[!0-9]}s
done

