#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - miscellaneous/rmne
# Started On        - Fri  6 Apr 21:27:34 BST 2018
# Last Change       - Sat  7 Apr 18:14:46 BST 2018
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

_VERSION_="2018-04-07"

XERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; exit 1; }
ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }
INFO(){ printf "INFO: %s\n" "$1"; }

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            RMNE - REMOVE NON-ESSENTIAL ($_VERSION_)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Remove all non-essential packages from Ubuntu or Debian installations.

		SYNTAX:     rmne [OPTS] PKG1 PKG2 PKG3 ...

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --update|-U             - Check for updates to rmne.
		            --debug|-D              - Enables the built-in bash debugging.
		            --no-purge              - Do not purge any remaining package files.

		NOTE:       Where PKG is one or more packages to keep, despite priority and task.
	EOF
}

PURGE="--purge"

while [ "$1" ]; do
	case "$1" in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"
			exit 0 ;;
		--update|-U)
			UPDATE="true" ;;
		--debug|-D)
			DEBUGME="true" ;;
		--no-purge)
			unset PURGE ;;
		-*)
			XERR "$LINENO" "Incorrect argument(s) specified." ;;
		*)
			break ;;
	esac
	shift
done

KEEP=($@)

declare -i DEPCOUNT=0
for DEP in /usr/bin/{wget,apt-get,apt-cache,dpkg-query}; {
	if ! [ -x "$DEP" ]; then
		ERR "$LINENO" "Dependency '$DEP' not met."
		DEPCOUNT+=1
	fi
}

[ $DEPCOUNT -eq 0 ] || exit 1

read -a WGET_VER_LINE <<< "$(/usr/bin/wget --version)"
WGET_VERSION=0${WGET_VER_LINE[2]//[!0-9]}
if [ $WGET_VERSION -ge 01192 -a $WGET_VERSION -lt 01194 ]; then
	NOWARC="--no-warc-compression"
fi

if [ "$UPDATE" == "true" ]; then
	VERSION_URL="$DOM/terminalforlife/miscellaneous/raw/master/rmne-version"
	LATEST=`/usr/bin/wget $NOWARC -q "$VERSION_URL" -O -`
	if [[ "${LATEST//-}" =~ ^[0-9]{8}$ ]]; then
		if [ ${LATEST//-} -gt ${_VERSION_//-} ]; then
			while read -r; do
				printf "%s\n" "$REPLY"
			done <<-EOF
				New version available:    $LATEST
				Current version:          $_VERSION_
			EOF
		fi
	else
		XERR "$LINENO" "Failed to check for available updates."
	fi

	exit 0
fi

printf -v DATE "%(%F)T" -1
while read -r; do
	printf "%s\n" "$REPLY"
done <<-EOF
	WARNING +------------------------[ $DATE ]--------------------------+ WARNING

	This is a small but dangerous program for the sole purpose of tearing down the
	non-essential packages, for educational, fun, or other purposes, such as setting up
	a specific type of installation.

	This program is ONLY for Debian and Ubuntu, or distributions based thereon. You'll
	pretty much be left with just the Debian essentials, unless your distribution has
	set some odd packages as essential, such as in Linux Lite and Linux Mint.

	NOTE: You may now wish to download some DEB packages in preperation for setting up
	      the system how you want, in-case you're left without an Internet connection.

	There is no 'undo' for this action, so it's worth making a backup beforehand.

	Specifically, packages to be removed fall under the following criteria:

	  1. They must not have the priority of standard, important, or required.
	  2. They must not be those which are specified as command arguments.
	  3. They must not be part of the minimal task.

	WARNING +-----------------------------------------------------------------+ WARNING

EOF

[ $UID -eq 0 ] || XERR "$LINENO" "Root access is required."

[ "$DEBUGME" == "true" ] && set -x

read -n 1 -e -p "[C]ontinue, despite the impending doom, or [q]uit? "
printf "\n"

case "$REPLY" in
	[Cc])
		;;
	[Qq])
		printf "No action taken -- quitting.\n"
		exit 0 ;;
	"")
		printf "No response -- quitting.\n"
		exit 1 ;;
	*)
		printf "Unrecognised response -- quitting.\n"
		exit 1 ;;
esac

INFO "Fetching list of non-essential packages."
FORMAT='${db:Status-Abbrev} ${Priority} ${Binary:Package}\n'
while read STATUS PRIORITY PKG; do
	MATCH='^(important|standard|required)$'
	if [ "$STATUS" == "ii" ] && ! [[ "$PRIORITY" =~ $MATCH ]]; then
		for I in ${KEEP[@]}; {
			if [ "$I" == "$PKG" ]; then
				INFO "Ignoring '$PKG' package to be kept."
				continue 2
			fi
		}

		INFO "Package '$PKG' set for initial list."
		LIST+=("$PKG")
	fi
done <<< "$(/usr/bin/dpkg-query -Wf "$FORMAT" \*)"

FILTERED(){
	while read -a X; do
		if [ "${X[0]}" == "Task:" ]; then
			for F in "${X[@]//,}"; {
				if ! [ "$F" == "Task:" ]; then
					printf "%s " "${F}"
				fi
			}
		fi
	done <<< "$(/usr/bin/apt-cache show $1)"
}

for PKG in ${LIST[@]}; {
	INFO "Checking task of '$PKG' package."
	for TASK in `FILTERED $PKG`; {
		if [ "$TASK" == "minimal" ]; then
			MINIMAL="true"
			continue 2
		fi
	}

	END_LIST+=("$PKG")
}

INFO "Initiating removal of final package list."
/usr/bin/apt-get -q -o Dpkg::Progress-Fancy=true --show-progress\
	remove $PURGE --autoremove ${END_LIST[@]}
