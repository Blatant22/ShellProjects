#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - /etc/cron.hourly/chkperms
# Started On        - Fri 29 Sep 17:00:00 BST 2017
# Last Change       - Wed  7 Feb 01:34:20 GMT 2018
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

# Choose alternative location if desired.
LOGFILE="/var/log/chkperms.log"

# Redirect and amend all STDERR to LOGFILE.
exec 2>> /var/log/chkperms.log

ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }

declare -i DEPCOUNT=0
for DEP in /bin/date /usr/bin/stat; {
	[ -x "$DEP" ] || {
		ERR "$LINENO" "Dependency '$DEP' not met."
		DEPCOUNT+=1
	}
}

[ $DEPCOUNT -eq 0 ] || exit 1

# Syntax is FILE:PERM, where FILE is the path/file to be checked to match the PERM.
# This is in a key:value style. Don't worry if your path contains a : (colon).
CORRECT=(
	"/boot:600"
	"/home/*:700"
	"/swapfile:600"
	"/etc/passwd:644"
	"/etc/shadow:640"
	"/etc/profile:644"
	"/etc/bash.bashrc:644"
)

# For each file listed above.
for FILE in ${CORRECT[@]}; {
	# Get the current date and time.
	printf -v DATE "%(%F_%X)T" -1

	# If the file, directory, or whatever exists and isn't lost+found.
	if [ -e "${FILE%:*}" -a ! "$FILE" == "lost+found" ]; then
		# Log the event. Includes date, time, and filename.
		printf "[%s]: BadPerms: %s\n" "$DATE" "${FILE%:*}" 1>&2

		# If notify-send is found, use it to notify the user.
		if [ -x /usr/bin/notify-send ]; then
			/usr/bin/notify-send "ERROR: /var/log/chkperms.log"
		fi
	fi
}

exit 0
