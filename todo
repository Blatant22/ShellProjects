#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - miscellaneous/todo
# Started On        - Mon  2 Apr 02:04:43 BST 2018
# Last Change       - Mon  2 Apr 03:24:33 BST 2018
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# Work in progress. The idea is to write a pure-shell approach to the todo alias in
# bashconfig/.bash_aliases which displays a list of TODOs found in various files.
#
# This is for educational (fun) purposes, portability (sort of), and preference.
#----------------------------------------------------------------------------------

#TODO - Move these to the usual argument parser.
#TODO - Add USAGE(), the dependency check, etc.

# Where your git repositories (directories thereof) are stored.
HUB="$HOME/GitHub/terminalforlife/Personal"

#TODO - Spaces in all repository names are not correctly handled, ... yet.
# Here, you can exclude specified repositories (directories) found in HUB. This is
# an array, so be sure to correctly quote names with spaces and special characters.
EXCLUDE=(swap-alert pymisc learnlinux get-uuid medlog-in-c)

#TODO - Incomplete feature is pretty much a placeholder for now; finish it.
# If you want to only check only these (array, as above) repositories, you can, -
# but if you don't, be sure to either comment this assignment out, or empty it.
ONLY=()

#---------------------------------------------------FETCH AND CHECK REPOSITORY LIST

XERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; exit 1; }
ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }

shopt -s dotglob

REPOS=()
if [ -d "$HUB" ]; then
	declare -i NUM=0
	for DIR in $HUB/*; {
		if [ -d "$DIR" -a -d "$DIR/.git" ]; then
			REPOS+=("$DIR")
			NUM+=1
		fi
	}
else
	XERR "$LINENO" "Unable to find or access git repository HUB."
fi

if ! [ ${#REPOS[@]} -eq 0 ]; then
	[ ${#REPOS[@]} -gt 0 ] && T="ies were" || T="y was"
	printf "%d repositor%s found.\n" "${#REPOS[@]}" "$T"
else
	XERR "$LINENO" "No git repositories were found in HUB."
fi

#-----------------------------------------------------------PROCESS EACH REPOSITORY

ONLY_OR_EXCLUDE(){
	for O in $@; {
		[ "$O" == "${REPOS[I]//*\/}" ] && continue 2
	}
}

for I in ${!REPOS[@]}; {
	if [ ${#ONLY[@]} -gt 0 ]; then
		ONLY_OR_EXCLUDE ${ONLY[@]}
	else
		ONLY_OR_EXCLUDE ${EXCLUDE[@]}
	fi

	SUBDIRS=()
	for Y in "${REPOS[I]}"/*; {
		[ -d "$Y" -a ! "${Y//*\/}" == ".git" ] && SUBDIRS+=("$Y")
	}

	printf "          |__ %s\n" "${SUBDIRS[@]//*\/}"

	printf "Checking: %s\n" "${REPOS[I]//*\/}"
}
