#!/usr/bin/env bash
#cito M:755 O:0 G:0 T:/usr/bin/swapfile
#----------------------------------------------------------------------------------
# Project Name      - Extra/source/swap-file
# Started On        - Sat 27 Jan 11:49:19 GMT 2018
# Last Change       - Fri  6 Dec 22:55:03 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

_VERSION_="2019-12-06"
_PROJECT_=${0##*/}

Err(){
	printf "[L%0.4d] ERROR: %s\n" "$2" "$3" 1>&2
	[ $1 -eq 1 ] && exit 1
}

DOM="https://github.com"

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            ${_PROJECT_^^} ($_VERSION_)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Generate a file, make it a swap area, then activate it.

		SYNTAX:     $_PROJECT_ [OPTS] [NAME] [SIZE]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --update|-U             - Check for updates to $_PROJECT_.
		            --debug|-D              - Enables the built-in bash debugging.

		NOTE:       Where NAME is the swap file name to be created in /; the file name must
		            be alphanumeric and without any spaces.

		            Where SIZE is the size of the swap file to create, in MB.

		FILE:       The '/etc/fstab' file is by default edited.

		SITE:       $DOM/terminalforlife/Extra
	EOF
}

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"
			exit 0 ;;
		--debug|-D)
			DEBUGME='true' ;;
		-*)
			Err 1 $LINENO "Incorrect argument(s) specified." ;;
		*)
			break ;;
	esac
	shift
done

FST="/etc/fstab"
NAME="/${1//[!_-.[:alnum:]]}"
SIZE=${2//[!0-9]}

declare -i DEPCOUNT=0
for DEP in sync cp ch{own,mod} dd swapon mkswap; {
	if ! type -fP "$DEP" > /dev/null 2>&1; then
		Err 0 $LINENO "Dependency '$DEP' not met."
		DEPCOUNT+=1
	fi
}

[ $DEPCOUNT -eq 0 ] || exit 1

if ! [ $# -eq 2 ]; then
	Err 1 $LINENO "Incorrect argument(s) specified."
elif ! [[ $SIZE =~ [0-9]+ ]]; then
	Err 1 $LINENO "Incorrect swap file size specified."
elif ! [ $UID -eq 0 ]; then
	Err 1 $LINENO "Setting up a swap file requires root access."
elif [ -f "$NAME" ]; then
	Err 1 $LINENO "File already exists."
fi

[ "$DEBUGME" == 'true' ] && set -x

printf "[1/7] Generating file to use for swap space...\n"

dd if=/dev/zero of="$NAME" bs=1024K count="$SIZE" status=none > /dev/null

printf "[2/7] Synchronising cached writes to storage...\n"

sync "$NAME" > /dev/null

printf "[3/7] Setting file attributes...\n"

chown 0:0 "$NAME" > /dev/null
chmod 600 "$NAME" > /dev/null

printf "[4/7] Setting up the Linux swap area...\n"

mkswap "$NAME" > /dev/null

printf "[5/7] Backing up filesystem table...\n"

cp "$FST"{,.bak} > /dev/null

printf "[6/7] Updating the filesystem table...\n" "$FST"

if [ -f "$FST" ]; then
	while read; do
		if [[ $REPLY =~ "$NAME"\ +none\ +swap\ +sw\ +0\ +0 ]]; then
			FOUND='true'; break
		fi
	done < "$FST"

	if [ "$FOUND" == 'true' ]; then
		printf "Pre-existing entry found in filesystem table.\n"
	else
		printf "%s none swap sw 0 0\n" "$NAME" >> "$FST"
	fi
else
	Err 1 $LINENO "Unable to find or access: $FST"
fi

printf "[7/7] Activating swap file...\n"

swapon "$NAME" > /dev/null

