#!/usr/bin/env bash
#cito M:755 O:0 G:0 T:/usr/bin/filesitter
#------------------------------------------------------------------------------
# Project Name      - Extra/source/filesitter
# Started On        - Thu 28 Sep 23:58:07 BST 2017
# Last Change       - Sat 22 Jan 00:51:12 GMT 2022
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Wait around until a file has been touched within a given interval.
#
# Features:
#
# N/A
#
# Bugs:
#
# N/A
#
# Dependencies:
#
#   bash (>= 3.2.48)
#------------------------------------------------------------------------------

CurVer='2022-01-22'
Progrm='filesitter'

Usage() {
	while read; do
		printf '%s\n' "$REPLY"
	done <<-EOF
		Usage: $Progrm [OPTS] FILE

		  -h, --help               - Displays this help information.
		  -v, --version            - Output only the version datestamp.
		  -i, --interval N         - Use a check interval of N seconds.

		  By default, the checking interval is 300 seconds.
	EOF
}

Err() {
	printf 'Err: %s\n' "$2" 1>&2
	(( $1 > 0 )) && exit $1
}

Action='suspend'

while [[ -n $1 ]]; do
	case $1 in
		--help|-h)
			Usage; exit 0 ;;
		--version|-v)
			printf '%s\n' "$CurVer"; exit 0 ;;
		--interval|-i)
			shift

			if [[ $1 =~ ^([0-9]+|[0-9]+.[0-9]+)$ ]]; then
				Interval=$1
			else
				Err 1 "Invalid interval specified."
			fi ;;
		-*)
			Err 1 "Incorrect argument(s) specified." ;;
		*)
			break ;;
	esac
	shift
done

(( $# == 0 )) && Err 1 'No file given to monitor.'

for Dep in stat systemctl sleep; do
	if ! type -P "$Dep" &> /dev/null; then
		Err 0 "Dependency '$Dep' not met."
		(( DepCount++ ))
	fi
done

(( DepCount > 0 )) && exit 1

while :; do
	[[ -f $1 ]] || continue

	New=`stat -c '%Y' "$1" 2> /dev/null`
	if (( Old == New )); then
		break
	else
		Old=$New
		sleep ${Interval:-300}s
	fi
done
