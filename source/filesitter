#!/bin/bash
#cito M:755 O:0 G:0 T:/usr/bin/filesitter
#----------------------------------------------------------------------------------
# Project Name      - Extra/source/filesitter
# Started On        - Thu 28 Sep 23:58:07 BST 2017
# Last Change       - Fri  6 Dec 22:49:34 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

_VERSION_="2019-12-06"
_PROJECT_=${0##*/}

Err(){
	printf "[L%0.4d] ERROR: %s\n" "$2" "$3" 1>&2
	[ $1 -eq 1 ] && exit 1
}

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            ${_PROJECT_^^} ($_VERSION_)
		            Written by terminalforlife <terminalforlife@yahoo.com>

		            Watch for and act upon the completion of file size changes.

		SYNTAX:     $_PROJECT_ [OPTS] FILE1 FILE2 FILE3 . . .

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --debug|-D              - Enables the built-in bash debugging.
		            --interval|-I N         - Where N is the check interval in seconds.
		                                      Default is to check every 300 seconds.
		            --shutdown|-S           - Power system off instead of suspending.

		NOTE:       Multiple files can be monitored at a time.

		            Suspending the machine is the default action upon no detected file size
		            change. The amount of minimum detected space change is 1 byte.
	EOF
}

ACTION="suspend"

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"; exit 0 ;;
		--debug|-D)
			DEBUGME='true' ;;
		--interval|-I)
			shift

			if [[ $1 =~ ^([0-9]+|[0-9]+.[0-9]+)$ ]]; then
				INTERVAL=$1
			else
				Err 1 $LINENO "Invalid interval specified."
			fi ;;
		--shutdown|-S)
			ACTION="poweroff" ;;
		-*)
			Err 1 $LINENO "Incorrect argument(s) specified." ;;
		*)
			break ;;
	esac
	shift
done

if ! [ "$*" ]; then
	Err 1 $LINENO "No files were given for $_PROJECT_ to monitor."
fi

declare -i DEPCOUNT=0
for DEP in stat systemctl sleep; {
	if ! type -P "$DEP" > /dev/null 2>&1; then
		Err 0 $LINENO "Dependency '$DEP' not met."
		DEPCOUNT+=1
	fi
}

[ $DEPCOUNT -eq 0 ] || exit 1

[ "$DEBUGME" == 'true' ] && set -x

GO="yes"
while [ "$GO" == "yes" ]; do
	declare -i NEW=0

	for FILE in $@; {
		[ -f "$FILE" ] || continue
		NEW+=`stat --printf="%s" "$FILE" 2> /dev/null`
	}

	if [ ${OLD:-0} -eq $NEW ]; then
		GO="no"
	else
		OLD=$NEW
		sleep ${INTERVAL:-300}s
	fi
done

if ! systemctl $ACTION; then
	Err 1 $LINENO "System $ACTION failed."
fi

