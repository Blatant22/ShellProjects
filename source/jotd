#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - Extra/source/jotd (Joke of the Day)
# Started On        - Fri  2 Mar 13:27:44 GMT 2018
# Last Change       - Wed 27 Nov 15:56:13 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

_VERSION_="2019-11-27"
_PROJECT_=${0##*/}

Err(){
	printf "[L%0.4d] ERROR: %s\n" "$2" "$3" 1>&2
	[ $1 -eq 1 ] && exit 1
}

DOM="http://www.laughfactory.com"

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            ${_PROJECT_^^} - JOKE OF THE DAY ($_VERSION_)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Display a Joke of the Day on your terminal.

		SYNTAX:     $_PROJECT_ [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --debug|-D              - Enables the built-in bash debugging.

		NOTE:       These jokes may or may not be tasteful!

		FILE:       Jokes are saved in:

		              /tmp/${_PROJECT_}_store.txt

		            This is to avoid contacting the server on each execution of $_PROJECT_. When
		            the system is restarted, assuming /tmp is cleared, $_PROJECT_ will once again
		            contact the server and recreate the file with the current joke.

		SITE:       $DOM
	EOF
}

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"
			exit 0 ;;
		--debug|-D)
			DEBUGME='true' ;;
		*)
			Err 1 $LINENO "Incorrect argument(s) specified." ;;
	esac
	shift
done

declare -i DEPCOUNT=0
for DEP in tee wget fold; {
	if ! type -fP "$DEP" > /dev/null 2>&1; then
		Err 0 $LINENO "Dependency '$DEP' not met."
		DEPCOUNT+=1
	fi
}

[ $DEPCOUNT -eq 0 ] || exit 1

if [ "$COLUMNS" ] && ! type -fP tput > /dev/null 2>&1; then
	Err 1 $LINENO "Dependency 'tput' not met."
fi

[ "$DEBUGME" == 'true' ] && set -x

URL="$DOM/jokes/joke-of-the-day"
FILE="/tmp/${_PROJECT_}_store.txt"

MAIN(){
	if type -fP curl > /dev/null 2>&1; then
		JOKE_RAW=`curl -s -C - "$URL"`
	elif type -fP wget > /dev/null 2>&1; then
		JOKE_RAW=`wget -q -t 1 "$URL" -O -`
	else
		Err 0 $LINENO "Dependency 'wget' or 'curl' not met."
	fi

	declare -i C=1
	while read X; do
		if [[ $X =~ \<p\ id\=\"joke_[0-9]+\"\> ]]; then
			printf -v JID "%d" "${X//[!0-9]}"
		 [[ $JID =~ ^[0-9]+$ ]] && C+=1
		elif [ $C -eq 2 ]; then
			for F in $X; {
				if [[ $F == *\<br\>* ]]; then
					printf "${F//<br>/$'\n'} "
				elif [[ $F == *\</p\>* ]]; then
					break
				else
					printf "%s " "$F"
				fi
			}

			printf "\n"
			break
		fi
	done <<< "$JOKE_RAW" | fold -s --width=${COLUMNS:-`tput cols`}
}

if [ -z "$(MAIN)" ]; then
	Err 1 $LINENO "Fetching the JOTD is currently unavailable."
elif ! [ -f "$FILE" ]; then
	MAIN | tee "$FILE"
else
	MAIN
fi
