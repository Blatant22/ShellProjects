#!/usr/bin/env bash

#------------------------------------------------------------------------------
# Project Name      - Extra/source/mozff
# Started On        - Sat 19 Mar 22:28:32 GMT 2022
# Last Change       - Sun 20 Mar 01:23:30 GMT 2022
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# WARNING: Not quite finished! It's still a huge time-saver, though.
#
# Written to address this thread:
#
#   https://forums.linuxmint.com/viewtopic.php?f=47&t=370237
#
# This installs Firefox to '/opt', but note that this doesn't include a
# '*.desktop', man page, or BASH completion file. Follow the instructions.
#
# Features:
#
#TODO: Add remaining part of installation.
#TODO: If existing Target found, check its mode.
#
# Bugs:
#
# N/A
#
# Dependencies:
#
#   bash (>= 4.4.20)
#   bzip2 (>= 1.0.6-8.1)
#   tar (>= 1.29b-2)
#   wget (>= 1.19.4-1) | curl (>= 7.58.0-2ubuntu3.10)
#------------------------------------------------------------------------------

CurVer='2022-03-20'
Progrm=${0##*/}

Usage() {
	while read; do
		printf '%s\n' "$REPLY"
	done <<-EOF
		Usage: $Progrm [OPTS]

		  -h, --help               - Display this help information.
		  -v, --version            - Output the version datestamp.
	EOF
}

Err() {
	printf 'Err: %s\n' "$2" 1>&2
	(( $1 > 0 )) && exit $1
}

Dom='https://download.mozilla.org'
Product='firefox-devedition-latest-ssl'
Target='/opt'

while [[ -n $1 ]]; do
	case $1 in
		--help|-h)
			Usage; exit 0 ;;
		--version|-v)
			printf '%s\n' "$CurVer"; exit 0 ;;
		*)
			Err 1 'Incorrect option(s) specified.' ;;
	esac
	shift
done

for Dep in wget mktemp bzip2 tar; do
	if ! type -P "$Dep" &> /dev/null; then
		Err 0 "Dependency '$Dep' not met."
		(( DepCount++ ))
	fi
done

(( DepCount > 0 )) && exit 1

(( UID == 0 )) || Err 1 'Root access is required.'

#-------------------------------------------------------------Primary Functions

SigHandler() {
	Exit=$?
	rm -f "$Archive" "${Archive%.bz2}"
	exit $Exit
}

AskYN() {
	while :; do
		read -p "$1 (Y/N) "
		case ${REPLY,,} in
			y|yes)
				return 0 ;;
			n|no)
				return 1 ;;
			'')
				Err 0 'Response required -- try again.' ;;
			*)
				Err 0 'Invalid response -- try again.' ;;
		esac
	done
}

Ask() {
	declare -n _Answer=$1
	Prompt=$2
	shift

	while :; do
		FuzzyFound='False'
		Found='False'

		read -p "$Prompt "
		if [[ -n $REPLY ]]; then
			for Valid in "$@"; {
				if [[ $Valid == $REPLY ]]; then
					Found='True'
					break
				elif [[ ${Valid,,} == ${REPLY,,} ]]; then
					FuzzyFound='True'
					break
				fi
			}

			if [[ $Found == True ]]; then
				_Answer=$REPLY
				break
			elif [[ $FuzzyFound == True ]]; then
				if AskYN "Did you mean '$Valid'?"; then
					_Answer=$Valid
					break
				fi
			else
				Err 0 'Invalid response -- try again.'
			fi
		else
			Err 0 'Response required -- try again.'
		fi
	done
}

#----------------------------------------------------Fetch Language Information

LangDom='https://www.mozilla.org'

while read; do
	if [[ $REPLY =~ \<option\ value=\"([-[:alpha:]]+)\"\>(.+)\</option\> ]]; then
		declare -A Langs[${BASH_REMATCH[1]}]=${BASH_REMATCH[2]% â€”*}
	fi
done < '/home/ichy/Desktop/Download the Firefox Browser in English (US) and more than 90 other languages.html'
#done <<< "$(wget -qO - "$LangDom/en-GB/firefox/all/#product-desktop-release")"

#-----------------------------------------------------Get Information from User

AskYN 'Begin installation?' || exit 0

if [[ -d "$Target/firefox" ]]; then
	if AskYN "Existing '$Target/firefox' found; remove it?"; then
		rm -vr "$Target/firefox"
	else
		AskYN 'Attempt to continue installation?' || exit 0
		SkipMost='True'
	fi
fi

if [[ $SkipMost != True ]]; then
	if (( ${#Langs[@]} == 0 )); then
		Err 0 'No supported languages found.'
		AskYN 'Attempt to enter language?' || exit 0
	fi

	while :; do
		if Ask ChosenLang 'Choose a language: ' "${!Langs[@]}"; then
			AskYN "You chose '${Langs[$ChosenLang]}' -- correct?" && break
		fi
	done

	Ask OS 'Download 64-bit or 32-bit version?' 32-bit 64-bit 64 32

	case $OS in
		64-bit|64) OS='linux64' ;;
		32-bit|32) OS='linux' ;;
	esac

	if [[ $OS == linux && `uname -p` == x86_64 ]]; then
		AskYN 'Detected a 64-bit system -- are you sure?' || exit 0
	elif [[ $OS == linux64 && `uname -p` == x86 ]]; then
		AskYN 'Detected a 32-bit system -- are you sure?' || exit 0
	fi

	#---------------------------------------------------------------Get Archive

	trap SigHandler EXIT HUP

	Archive=`mktemp --suffix='.bz2'`
	URL="$Dom/?product=$Product&os=$OS&lang=$ChosenLang"

	printf 'Downloading archive with WGet...\n'
	if wget --show-progress -qO "$Archive" "$URL"; then
		printf 'Archive downloaded successfully\n'
	else
		Err 1 'Failed to download archive.'
	fi

	#--------------------------------------------------------Extracting Archive

	if ! [[ -d $Target ]]; then
		if mkdir -v "$Target"; then
			# The `--mode=` flag doesn't work.
			chmod 755 "$Target"
		else
			Err 1 'Failed to create target directory.'
		fi
	fi

	printf 'Uncompressing archive...\n'
	if bzip2 -vd "$Archive"; then
		printf 'Extracting archive contents...\n'
		if ! tar -C "$Target" -xvpf "${Archive%.bz2}"; then
			Err 1 'Failed to extract archive contents.'
		fi
	else
		Err 1 'Failed to uncompress archive.'
	fi
fi

#-------------------------------------------------------Install Remaining Files

# To be written...
