#!/usr/bin/env bash
#cito M:755 O:0 G:0 T:/usr/bin/tlptog
#------------------------------------------------------------------------------
# Project Name      - Extra/source/tlptog
# Started On        - Fri 18 May 14:19:48 BST 2018
# Last Change       - Fri 12 May 00:32:15 BST 2023
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Toggle TLP to improve power management on portable devices.
#
# Features:
#
# N/A
#
# Bugs:
#
# N/A
#
# Dependencies:
#
#   N/A
#------------------------------------------------------------------------------

CurVer='2023-05-12'
Progrm='tlptog'

Usage() {
	read -d '' <<-EOF
		Usage: $Progrm [OPTS]

		  -h, --help               - Displays this help information.
		  -v, --version            - Output only the version datestamp.
	EOF

	printf '%s' "$REPLY"
}

Err() {
	printf 'Err: %s\n' "$2" 1>&2
	(( $1 > 0 )) && exit $1
}

File='/etc/default/tlp'

while [[ -n $1 ]]; do
	case $1 in
		--help|-h)
			Usage; exit 0 ;;
		--version|-v)
			printf '%s\n' "$CurVer"; exit 0 ;;
		*)
			Err 1 'Incorrect argument(s) specified.' ;;
	esac
	shift
done

if (( UID != 0 )); then
	Err 1 'Root access is required.'
elif ! [[ -f $File ]]; then
	Err 1 "File '$File' not found."
fi

Changed=
OutLines=()
while read; do
	if [[ $REPLY == TLP_ENABLE=* ]]; then
		IFS='=' read Key Value <<< "$REPLY"

		# Avoid clobbering trailing comment.
		ValueInt=${Value%% *}
		ValueRest=${Value#* }
		if (( ValueInt == 0 )); then
			OutLines+=("$Key=1 $ValueRest")
			Changed=1
		elif (( ValueInt == 1 )); then
			OutLines+=("$Key=0 $ValueRest")
			Changed=0
		else
			Err 0 'Unexpected value found -- ignoring.'
		fi
	else
		OutLines+=("$REPLY")
	fi
done < "$File"

# Only write to file if a change was made.
if [[ -n $Changed ]]; then
	printf '%s\n' "${OutLines[@]}" > "$File"

	case $Changed in
		1) printf 'TLP enabled.\n' ;;
		0) printf 'TLP disabled.\n' ;;
	esac
fi
