#!/usr/bin/env bash
#cito M:755 O:0 G:0 T:/usr/bin/csi3
#------------------------------------------------------------------------------
# Project Name      - Extra/source/csi3/csi3
# Started On        - Sat 29 May 22:47:07 BST 2021
# Last Change       - Thu  2 Sep 19:28:58 BST 2021
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# A simple pure-BASH solution for listing your key bindings to i3-wm.
#
# Features:
#
# N/A
#
# Bugs:
#
# N/A
#
# Dependencies:
#
#   bash (>= 4.4.18-2)
#------------------------------------------------------------------------------

CurVer='2021-09-02'
Progrm=${0##*/}

Usage(){
	while read; do
		printf '%s\n' "$REPLY"
	done <<-EOF
		Usage: $Progrm [OPTS] [FILE]

		  -h, --help               - Display this help information.
		  -v, --version            - Output the version datestamp.
		  -E, --noexecs            - Omit 'exec' & 'exec_always' bindings.

		A key binding's action being prepended with an exclamation mark ('!')
		indicates it's a shell command, and not a native i3-wm command.
	EOF
}

Err(){
	printf 'ERROR: %s\n' "$2" 1>&2
	[ $1 -gt 0 ] && exit $1
}

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf '%s\n' "$CurVer"; exit 0 ;;
		--noexecs|-E)
			NoExecs='True' ;;
		-*)
			Err 1 'Incorrect option(s) specified.' ;;
		*)
			break ;;
	esac
	shift
done

File="$HOME/.config/i3/config"

if ! [ -f "$File" ]; then
	Err 1 'Configuration FILE not found.'
elif ! [ -r "$File" ]; then
	Err 1 'Configuration FILE unreadable.'
fi

#-------------------------------------------------------------------Gather Data

Count=0
KeysLenMax=0
while read Line; do
	CurrentKey=

	case $Line in
		'#'*|'')
			continue ;;
		bindsym\ *)
			read _ Keys Action <<< "$Line"

			# Process each key in order to capitalize the first character. As
			# a bonus, this capitalizes each of the single letters.
			IFS='+' read -a KeyParts <<< "$Keys"
			for KeyPart in "${KeyParts[@]}"; {
				CurrentKey+="${KeyPart^}+"
			}

			Keys=${CurrentKey%+}

			if [ "$NoExecs" == 'True' ]; then
				case $Action in
					exec\ *|exec_always\ *) continue ;;
				esac
			fi

			Action=${Action/exec --no-startup-id /!}
			Action=${Action/exec_always --no-startup-id /!}
			Action=${Action/exec_always /!}
			Action=${Action/exec /!}

			KeysLen=${#Keys}
			if [ $KeysLen -gt $KeysLenMax ]; then
				KeysLenMax=$KeysLen
			fi

			let Count++

			declare -A Bindings["${Count}_$Keys"]=$Action ;;
	esac
done < "$File"

#---------------------------------------------------------------Display Results

Count=1
until [ $Count -gt ${#Bindings[@]} ]; do
	for Binding in "${!Bindings[@]}"; {
		if [ $Count -eq "${Binding%%_*}" ]; then
			printf '%*s ' $KeysLenMax "${Binding#*_}"
			if [[ ${Bindings[$Binding]} == \!* ]]; then
				printf '\e[91m!\e[37m%s\e[0m\n' "${Bindings[$Binding]#!}"
			else
				printf '\e[37m%s\e[0m\n' "${Bindings[$Binding]}"
			fi

			let Count++

			break
		fi
	}
done
