#!/usr/bin/env bash

#------------------------------------------------------------------------------
# Project Name      - Extra/source/series60fps
# Started On        - Sat  2 Oct 05:09:10 BST 2021
# Last Change       - Sun  9 Jan 23:39:40 GMT 2022
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Parse 'windowscentral.com' to display a list of XBOX games which run at 60fps
# or more on the XBOX Series S and XBOX Series X consoles. I don't know if the
# site updates this list (probably not), but this might be interesting to
# someone out there.
#
# Features:
#
# N/A
#
# Bugs:
#
# N/A
#
# Dependencies:
#
#   bash (>= 4.0)
#------------------------------------------------------------------------------

Domain='https://www.windowscentral.com'
URL="$Domain/xbox-fps-boost-scores-over-70-new-games-xbox-series-x-series-s"

if type -P wget &> /dev/null; then
	Download="wget -qO - $URL"
elif type -P curl &> /dev/null; then
	Download="curl -s $URL"
else
	printf 'Err: Neither wget(1) nor curl(1) found.\n' 1>&2
	exit 1
fi

while read; do
	if [[ $REPLY == '<th>Game</th>' ]]; then
		Found='True'
	elif [[ $Found == True ]]; then
		REPLY=${REPLY#<td>}
		REPLY=${REPLY%</td>}

		if [[ $REPLY == '<strong>'* ]]; then
			REPLY=${REPLY#<strong>}
			REPLY=${REPLY%</strong>}

			GameName=$REPLY
			GameNameLen=${#GameName}
			if (( GameNameLen > GameNameLenMax )); then
				GameNameLenMax=$GameNameLen
			fi

			GameTitleFound='True'
		elif [[ $GameTitleFound == True ]]; then
			declare -A Games["$GameName"]=$REPLY
			GameTitleFound='False'
		fi

		[[ $REPLY == '</table>'* ]] && break
	fi
done <<< "$($Download)"

for Game in "${!Games[@]}"; {
	printf '%-*s %s\n' $GameNameLenMax "$Game" "${Games[$Game]}"
}
