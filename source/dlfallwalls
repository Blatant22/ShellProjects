#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - Extra/source/dlfallwalls
# Started On        - Sun 15 Oct 20:48:22 BST 2017
# Last Change       - Wed 27 Nov 15:54:01 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

XERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; exit 1; }
ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }

_VERSION_="2019-11-27"
_PROJECT_=${0##*/}

DOM="https://wallpapercave.com"

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            ${_PROJECT_^^} ($_VERSION_)
		            Written by terminalforlife <terminalforlife@yahoo.com>

		            Download a collection of Autumn/Fall wallpapers.

		SYNTAX:     $_PROJECT_ [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --quiet|-q              - Runs in quiet mode. Errors still output.
		            --debug|-D              - Enables the built-in bash debugging.

		NOTE:       Files will be download to the current directory, as JPGs.

		SITE:       $DOM
	EOF
}

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--quiet|-q)
			BEQUIET='true' ;;
		--debug|-D)
			DEBUGME='true' ;;
		*)
			XERR $LINENO "Incorrect argument(s) specified." ;;
	esac
	shift
done

if ! type -P wget > /dev/null 2>&1; then
	Err 1 $LINENO "Dependency 'wget' not met."
fi

# Newer versions of wget by default request unwanted server-side compression.
read -a WGET_VER_LINE <<< "$(wget --version)"
[ 0${WGET_VER_LINE[2]//[!0-9]} -ge 01192 ] && NOWARC="--no-warc-compression"

[ "$BEQUIET" == 'true' ] && exec > /dev/null
[ "$DEBUGME" == 'true' ] && set -xeu

URL="$DOM/download/fall-wallpapers"
HTML=`wget $NOWARC -q "${URL%/down*}/fall-wallpapers" -O -`

declare -a GETID=()
while read -a Y; do
	for FIELD in ${Y[@]/src=\"\/wp}; {
		[ "$FIELD" == "$OLD" ] && continue

		if [[ $FIELD == /* ]]; then
		 [[ $FIELD =~ [0-9A-Za-z]+.jpg ]] && {
				GETID+=("${FIELD%.jpg\"}")
			}
		else
			continue
		fi

		OLD=$FIELD
	}
done <<< "$HTML"

declare -i N=1
for ID in ${GETID[@]//\/}; {
	printf "%s\n" "DOWNLOADING: fall-wallpapers-${ID}.jpg"
	printf -v FNAME "./fall-wallpapers-%0.2d.jpg" "${N}"
	wget $NOWARC -qc "${URL}-1920x1080-${ID}" -O "$FNAME"
	N+=1
}

