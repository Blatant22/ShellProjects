#!/bin/bash
#cito M:755 O:0 G:0 T:/usr/bin/pagewatch
#----------------------------------------------------------------------------------
# Project Name      - Extra/source/pagewatch
# Started On        - Wed 18 Oct 19:27:40 BST 2017
# Last Change       - Fri  6 Dec 22:53:26 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# This came to be because I got excited and impatient waiting for Ubuntu 17.10 to
# be released and therefor available on the Ubuntu website.
#
# I devised a simple way to quickly and automatically check for changes on a given
# webpage, which for me was the download page, where I had hoped to see the new
# 17.10 download link.
#----------------------------------------------------------------------------------

_VERSION_="2019-12-06"
_PROJECT_=${0##*/}

Err(){
	printf "[L%0.4d] ERROR: %s\n" "$2" "$3" 1>&2
	[ $1 -eq 1 ] && exit 1
}

shopt -s extglob

USAGE(){
	while read -r; do
		echo "$REPLY"
	done <<-EOF
		            ${_PROJECT_^^} ($_VERSION_)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Watch a webpage for signs of change by checkings its md5sum.

		SYNTAX:     $_PROJECT_ [OPTS] URL COMMANDS

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --quiet|-q              - Runs in quiet mode. Errors still output.
		            --debug|-D              - Enables the built-in bash debugging.
		            --interval|-i N         - Check for changes every N seconds. The
		                                      default is to check every 60 seconds.

		NOTE:       Where COMMANDS would be your command(s) to execute upon detection of
		            any changes to the specified webpage. See below for examples.

		EXAMPLE:
		            $_PROJECT_ --interval 10m "https://www.ubuntu.com" notify-send "Ready!"

		CAVEAT:     Some webpages update so frequently that $_PROJECT_ would for them be
		            no use. Such pages tend to have content like counters or timers.
	EOF
}

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"; exit 0 ;;
		--quiet|-q)
			BEQUIET='true' ;;
		--debug|-D)
			DEBUGME='true' ;;
		--interval|-i)
			shift; INTERVAL="$1" ;;
		-*|--*)
			Err 1 $LINENO "Incorrect argument(s) specified." ;;
		*)
			break ;;
	esac
	shift
done

URL=$1

shift

COMMANDS="$@"

declare -i DEPCOUNT=0
for DEP in sleep md5sum wget; {
	if ! type -fP "$DEP" > /dev/null 2>&1; then
		Err 0 $LINENO "Dependency '$DEP' not met."
		DEPCOUNT+=1
	fi
}

[ $DEPCOUNT -eq 0 ] || exit 1

[ "$URL" ] || Err 1 $LINENO "A webpage address (URL) is required."

[ "$BEQUIET" == 'true' ] && exec > /dev/null
[ "$DEBUGME" == 'true' ] && set -x

printf -v BUFFER "/tmp/${_PROJECT_}_%(%F_%X)T.md5" "-1"
[ -d /tmp ] || Err 1 $LINENO "Directory /tmp is missing or inaccessible."

wget -q "$URL" -O - | md5sum > "$BUFFER" 2> /dev/null

declare -i COUNT=0
while :; do
	wget -q "$URL" -O - | md5sum -c "$BUFFER" > /dev/null 2>&1 || ($COMMANDS)

	COUNT+=1

	#TODO - Somewhere here is an error (incorrect number of options?) when
	#       a change is detected with md5sum. COMMANDS also didn't happen.

	printf "CHECK[#%0.4d]: %(%F (%X))T\n" "$COUNT"

	sleep "${INTERVAL:-1m}"
done

