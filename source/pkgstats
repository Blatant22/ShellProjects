#!/usr/bin/env bash

#------------------------------------------------------------------------------
# Project Name      - Extra/source/pkgstats
# Started On        - Sat 17 Jun 09:08:12 BST 2023
# Last Change       - Sun 18 Jun 15:45:27 BST 2023
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Displays and stores the size (in bytes) and name of every package available
# in the repositories, then sums them all up. Below are the related information
# for my system, and what I determined from the results I got from this.
#
# Note that this takes a LONG time. The below results too me all day, from
# about 8am to 2am the next morning. It's possible to parallelise this
# approach, if needed. I didn't want to hammer the servers, though. One way to
# handle this script, would be to fetch the results in parts, by having
# multiple iterations fetching each part simultaneously. The `download`
# operation of apt-get(8) does permit this.
#
#   - Test performed on: 2023-06-18
#   - Presumably using AMD64 packages
#   - Ubuntu 18.04.6 repositories
#   - Using 'main', 'restricted', 'universe', 'multiverse', via the 'bionic', -
#     'bionic-updates', and 'bionic-security' repositories
#   - Using no PPAs or similar; only standard repositories
#   - Using Ubuntu's parter repository
#   - 82795 packages available
#
# My results:
#
#   - Total package size is 253G
#   - Average package size is 3.2M
#   - 0.0072% of packages are over 500M
#   - 73.8% of packages are â‰¤ 10M
#
#   Top 10 package sizes:
#
#      1 1005M flightgear-data-base
#      2  823M redeclipse-data
#      3  611M 0ad-data
#      4  540M sauerbraten
#      5  537M mrpt-doc
#      6  529M firefox-dbg
#      7  499M thunderbird-dbg
#      8  491M supertuxkart-data
#      9  477M alien-arena-data
#     10  435M nexuiz-textures
#
#   The smallest packages are 'libc6-armhf-armel-cross' and
#   'libc6-armel-armhf-cross', at just 776 bytes each.
#
# NOTE: If you run this, please be mindful of the servers. While sending a
#       spider to grab the header is surely harmless, it's still constant
#       connections, so please don't run this excessively!
#------------------------------------------------------------------------------

Args=$#
if (( Args < 1 )); then
	read -d '' <<-EOF
		Err: Argument required.

		     This script requires a file into which to save the package
		     information, consisting of a 'BYTES PACKAGE' format.

		Nothing to do -- quitting.
	EOF

	printf '%s' "$REPLY"
	exit 1
elif (( Args > 1 )); then
	printf 'Err: Invalid argument(s).\n' 1>&2
	exit 1
elif [[ -d $1 ]]; then
	printf 'Err: Argument is a directory.\n' 1>&2
	exit 1
elif [[ -f $1 ]]; then
	printf 'Err: File already exists.\n' 1>&2
	exit 1
fi

DepCount=0
for Dep in apt-get apt-cache wget awk; do
	if ! type -P "$Dep" &> /dev/null; then
		printf "Err: Dependency '$Dep' not met.\n" 1>&2
		(( DepCount++ ))
	fi
done

(( DepCount > 0 )) && exit 1

readarray -t <<< "$(apt-cache pkgnames 2>&-)" || exit 1

> "$1"

Count=0
Len=${#MAPFILE[@]}
for Package in "${MAPFILE[@]}"; {
	awk -v C=$(( ++Count )) -v L=$Len -v PKG="$Package" '
		BEGIN {printf("[%05.4f%%] \033[92m%s\033[0m ", C / L * 100, PKG)}
	' 2>&-

	while read Line; do
		if [[ ${Line:0:1} == "'" ]]; then
			Link=${Line%\'*}
			Link=${Link#\'}

			break
		fi
	done <<< "$(apt-get download --print-uris "$Package" 2>&-)"
	printf 'is '

	while read F1 F2 _; do
		if [[ $F1 == Length: ]]; then
			printf '%s %s\n' "$F2" "$Package" >> "$1"
			printf '\e[93m%d\e[0m bytes.\n' "$F2"

			break
		fi
	done <<< "$(wget --spider "$Link" 2>&1)"
}
