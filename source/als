#!/bin/sh

#----------------------------------------------------------------------------------
# Project Name      - Extra/source/als
# Started On        - Wed 27 Nov 21:28:12 GMT 2019
# Last Change       - Tue  3 Dec 13:59:13 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# This project is NOT YET finished.
#
# Written with a Reddit post in mind, but could an interesting side project.
# Although the aforementioned post was on 'r/bash', I've opted instead for `sh`.
#
# In order to keep the syntax as POSIX as I am able, I've written it under `yash`.
#----------------------------------------------------------------------------------

set -- -A --zpadmod $HOME/*

CurVer='2019-12-03'
Progrm=${0##*/}

DOM='https://github.com'

Usage(){
	while read -r CurLine; do
		printf "%b\n" "$CurLine"
	done <<-EOF
		\r            ALS ($CurVer)
		\r            Written by terminalforlife <terminalforlife@yahoo.com>
		\r
		\r            A portable Bourne Shell filesystem traversal utility.
		\r
		\rSYNTAX:     $Progrm [OPTS] [FILE_1] [FILE_2] ...
		\r
		\rOPTS:       --help|-h|-?            - Displays this help information.
		\r            --version|-v            - Output only the version datestamp.
		\r            --quiet|-q              - Runs in quiet mode. Errors still output.
		\r            --debug|-D              - Enables the built-in Bourne debugging.
		\r
		\r            --all|-A                - Enable displaying of all hidden files.
		\r
		\r            --zpadmod               - Zero-pad mode integers. IE: '0600'
		\r            --zpadid                - Zero-pad UID & GID integers. IE: '0924'
		\r
		\r            --size|-s               - Show the file sizes; in bytes, by default.
		\r            --human|-h [K|M|G]      - Show file sizes in 'K', 'M', or 'G'.
		\r
		\rNOTE:       ALS supports the special '--' argument to signal the end of
		\r            argument processing; handy for filenames beginning with '-'.
		\r
		\r            While the standard 'ls' command will (optionally) display the
		\r            unique '.' and '..' files expected in every directory, ALS won't.
		\r
		\rSITE:       $DOM/terminalforlife/Extra
	EOF

	unset CurLine
}

Err(){
	printf "ERROR: %s\n" "$2" 1>&2
	[ $1 -eq 1 ] && exit 1
}

ShowSize='B'

while [ -n "$1" ]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"; exit 0 ;;
		--all|-A)
			ShowAll='true' ;;
		--zpadmod)
			PadModes='true' ;;
		--zpadid)
			PadIDs='true' ;;
		--size|-s)
			ShowSize='true' ;;
		--human|-h)
			shift
			case $1 in
				[Kk]|[Mm]|[Gg])
					ShowSize=$1 ;;
				[Bb])
					Err 1 "To display in bytes, omit the '--human|-h' option." ;;
				*)
					Err 1 'Invalid file size type specified.' ;;
			esac ;;
		--)
			ArgEnd='--'
			break ;;
		-*)
			Err 1 "Incorrect argument(s) specified." ;;
		*)
			break ;;
	esac
	shift
done

MoreArgs=$*

[ "$DEBUGME" == "true" ] && set -x

SplitStr(){
	IFS=$1
	shift

	set -- $2
	printf "%s\n" "$@"
	unset IFS
}

ChkPath(){
	for CurDir in `SplitStr ':' "$PATH"`; do
		for CurFile in "$CurDir"/*; do
			if [ "$CurFile" = "$1" ]; then
				ExecFound='true'
				break 2
			fi
		done
	done

	if ! [ "$ExecFound" = 'true' ]; then
		unset CurDir CurFile ExecFound
		return 0
	else
		unset CurDir CurFile ExecFound
		return 1
	fi
}

ChkPath 'stat' || Err 1 "Dependency 'stat' not met."

GetSize(){
	case $ShowSize in
		[Bb])
			printf "%d" "$1" ;;
		[Kk])
			;;
		[Mm])
			;;
		[Gg])
			;;
	esac
}

FileStat(){
	# The maximum length of size for all files.
	MaxLen=$1
	shift

	StatFormat='%a %u %g %s %X %Y:%n'

	# Get information for each file given to `FileStat()` and parse the results.
	for CurFile in "$@"; do
		CurFileData=`stat --printf="$StatFormat" "$CurFile"`

		# Parse the fields one-by-one in order to correctly format them.
		# Fields: 1=Modes, 2=UID, 3=GID, 4=Bytes, 5=Access, 6=Mod, 7=Name
		FieldCount=0
		for CurField in ${CurFileData%%:*}; do
			FieldCount=$((FieldCount + 1))
			[ $FieldCount -eq 7 ] && break

			if [ $FieldCount -eq 1 ]; then
				if [ "$PadModes" = 'true' ]; then
					printf "%-0.4d" "$CurField"
				else
					printf "%-d" "$CurField"
				fi
			elif [ $FieldCount -eq 2 -o $FieldCount -eq 3 ]; then
				if [ "$PadIDs" = 'true' ]; then
					printf "%-0.4d" "$CurField"
				else
					printf "%-d" "$CurField"
				fi
			elif [ $FieldCount -eq 4 ]; then
				printf "%${Pad}s" "$(GetSize "$CurField")"
			else
				# Avoid unwanted padding otherwise added below.
				continue
			fi

			# Saves needing to remember the trailing whitespace.
			printf " "
		done

		if [ -d "$CurFileData" ]; then
			Trail='/'
		fi

		# Now print the file name.
		FileName=${CurFileData##*:}
		printf "%-s%s" "${CurFileData##*/}" "$Trail"

		# Needed to avoid text-vomit.
		printf "\n"
	done

	unset CurField SepCode RawStatFormat FileName Trail Len\
		StatFormat StatData FieldCount CurFileData Pad
}

# Pre-process (sadly) to gather correct alignments.
PreProc(){
	Len=0
	for CurFile in "$@"; do
		stat --printf='%s' "$CurFile"
	done

	unset Len CurFile
}

if [ $# -gt 0 ]; then
	PreProc

	# When the user does specify file(s) to list.
	FileStat "$@"
else
	PreProc *

#----------------------------------------------------------------------WORKING HERE
# Need to pre-process with `stat` the files, but only the sizes, so the correct
# maximum field width can be given.
#
# Also need to convert and width-check (per above) the human-readable form of size.
#
# In the middle of changing from old usage of `ShowAll` so that it now makes use of
# the special `dot-glob` option (like `dotglob` in Bash) which can be enabled with
# `set --dot-glob`; need to check if this is as portable as `yash` suggests, and
# how to unset it.
#----------------------------------------------------------------------------------

	# Standard, non-recursive list of all files in the CWD.
	for CurFile in ${ShowAll:-*}; do
		if [ -n "$ShowAll" ]; then
			if [ "$CurFile" = '.' -o "$CurFile" = '..' ]; then
				# Don't want to see these files; this ain't `ls`!
				continue
			fi
		fi

		FileStat "$CurFile"
	done
fi
