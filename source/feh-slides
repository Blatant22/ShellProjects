#!/usr/bin/env bash
#cito M:755 O:0 G:0 T:/usr/local/bin/feh-slides
#------------------------------------------------------------------------------
# Project Name      - Extra/source/feh-slides
# Started On        - Sun  5 Nov 12:04:09 GMT 2017
# Last Change       - Sat 27 May 22:24:27 BST 2023
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Simple desktop wallpaper slideshow using feh(1).
#
# Dependencies:
#
#   bash (>= 3.0)
#   coreutils (>= 8.28)
#   feh (>= 2.23.2)
#------------------------------------------------------------------------------

CurVer='2023-05-27'
Progrm='feh-slides'

Usage() {
	read -d '' <<-EOF
		Usage: $Progrm [OPTS] PATH

		  -h, --help               - Displays this help information.
		  -v, --version            - Output only the version datestamp.
		  -i, --interval INT       - Change wallpaper every INT seconds.

		  Where PATH is the directory in which the chosen images are stored.

		  If no interval is specified, the default is 5 seconds.
	EOF

	printf '%s' "$REPLY"
}

Err() {
	printf 'Err: %s\n' "$2" 1>&2
	(( $1 > 0 )) && exit $1
}

while [[ -n $1 ]]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf '%s\n' "$CurVer"; exit 0 ;;
		--interval|-i)
			if [[ -z $2 ]]; then
				Err 1 "Option '$1' requires an argument."
			elif [[ $2 == 0 || ! $2 =~ ^[[:digit:]]+$ ]]; then
				Err 1 "Option '$1' invalid."
			else
				Interval=$2
				shift
			fi ;;
		-*)
			Err 1 'Incorrect argument(s) specified.' ;;
		*)
			break ;;
	esac
	shift
done

if (( $# > 1 )); then
	Err 1 "Only one wallpaper directory may be specified."
elif (( $# == 0 )); then
	Err 1 "A wallpaper directory must be specified."
fi

DepCount=0
for Dep in sleep feh; do
	if ! type -P "$Dep" &> /dev/null; then
		Err 0 "Dependency '$Dep' not met."
		(( DepCount++ ))
	fi
done

(( DepCount == 0 )) || exit 1

if [[ -d $1 ]]; then
	while :; do
		for CurFile in "${1%/}"/*; do
			[[ -f $CurFile && -r $CurFile ]] || continue
			if feh --no-fehbg --bg-scale "$CurFile"; then
				sleep ${Interval:-5}s
			fi
		done
	done
else
	Err 1 "Directory '$1' not found."
fi
