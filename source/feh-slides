#!/bin/sh
#cito M:755 O:0 G:0 T:/usr/bin/feh-slides
#------------------------------------------------------------------------------
# Project Name      - Extra/source/feh-slides
# Started On        - Sun  5 Nov 12:04:09 GMT 2017
# Last Change       - Sun 29 Nov 04:02:34 GMT 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Super-simple Bourne POSIX desktop wallpaper slideshow.
#
# Dependencies:
#
#   coreutils (>= 8.28)
#   feh (>= 2.23.2)
#------------------------------------------------------------------------------

CurVer='2020-11-29'
Progrm=${0##*/}

Usage(){
	while read -r CurLine; do
		printf '%b\n' "$CurLine"
	done <<-EOF
		Usage: $Progrm [OPTS] [PATH]

		\r  -h, --help               - Displays this help information.
		\r  -v, --version            - Output only the version datestamp.
		\r  -i, --interval [INT]     - Change wallpaper every INT seconds.

		\r  Where PATH is the directory in which the chosen images are stored.

		\r  If no interval is specified, the default of 5 seconds is chosen.
	EOF
}

Err(){
	printf 'ERROR: %s\n' "$2" 1>&2
	[ $1 -gt 0 ] && exit $1
}

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf '%s\n' "$CurVer"; exit 0 ;;
		--interval|-i)
			shift; Interval=$1 ;;
		-*)
			Err 1 'Incorrect argument(s) specified.' ;;
		*)
			break ;;
	esac
	shift
done

DepCount=0
for Dep in sleep feh; do
	if ! command -V "$Dep" 1> /dev/null 2>&1; then
		Err 0 "Dependency '$Dep' not met."
		DepCount=$((DepCount + 1))
	fi
done

[ $DepCount -gt 0 ] && exit 1

if [ $# -gt 1 ]; then
	Err 1 "Only one wallpaper directory may be specified."
elif [ $# -eq 0 ]; then
	Err 1 "A wallpaper directory must be specified."
fi

if [ -d "$1" ]; then
	while :; do
		for CurFile in "${1%/}"/*; do
			[ -f "$CurFile" ] || continue

			if ! feh --no-fehbg --bg-center "$CurFile"; then
				Err 1 'Non-zero exit status from feh(1).'
			elif ! sleep ${Interval:-5}s 1> /dev/null 2>&1; then
				Err 1 'Invalid interval time specified.'
			fi
		done
	done
else
	Err 1 "Directory '$1' not found."
fi
