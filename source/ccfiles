#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - Extra/source/ccfiles (Cross-Check Files)
# Started On        - Wed 13 Dec 13:45:22 GMT 2017
# Last Change       - Wed 15 Dec 23:33:29 GMT 2021
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# An idea which I'm hoping will successfully turn into a useful yet simple tool.
#
# NOTE: The original plan was to have a tool to check the files installed by
#       packages which use dpkg (or apt/apt-get?), in an attempt to see if any
#       executables are loaded (via /proc) and thus potentially unwanted, but it
#       seems to have gone a different direction.
#----------------------------------------------------------------------------------

_VERSION_="2021-12-15"
_PROJECT_=${0##*/}

Err(){
	printf 'Err: %s\n' "$2" 1>&2
	(( $1 > 0 )) && exit $1
}

DIR="/var/lib/dpkg/info"

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            ${_PROJECT_^^} ($_VERSION_)
		            Written by terminalforlife <terminalforlife@yahoo.com>

		            Cross-check files installed by dpkg.

		SYNTAX:     $_PROJECT_ [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --quiet|-q              - Runs in quiet mode. Errors still output.
		            --debug|-D              - Enables the built-in bash debugging.
		            --nopause|-P            - Do not pause upon WARNING discovery.
		            --nobell|-B             - Do not sound a bell upon WARNING discovery.

		FILES:      $DIR/*.list
	EOF
}

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--quiet|-q)
			BEQUIET='true' ;;
		--debug|-D)
			DEBUGME='true' ;;
		--nopause|-N)
			NOPAUSE='true' ;;
		--nobell|-B)
			NOBELL='true' ;;
		*)
			Err 1 'Incorrect argument(s) specified.' ;;
	esac
	shift
done

if ! type -P readlink > /dev/null 2>&1; then
	Err 1 "Dependency 'readlink' not met."
fi

[ "$BEQUIET" == 'true' ] && exec > /dev/null
[ "$DEBUGME" == 'true' ] && set -x

#TODO: Check for Debian/Ubuntu base.

if [ -d $DIR/ ]; then
	for FILE in $DIR/*.list; {
		while read -r; do
			for EXE in /proc/*/exe; {
				RESOLVED=`readlink --quiet "$EXE"`

				if ! [ -x "$RESOLVED" ]; then
					if ! [ "$NOBELL" == 'true' ]; then
						printf "WARNING: %s\n" "$RESOLVED"
					else
						printf "\aWARNING: %s\n" "$RESOLVED"
					fi

					if ! [ "$NOPAUSE" == 'true' ]; then
						read -n 1 -s -p "Press any key to continue... "
					fi
				else
					printf "CHECKING: %s\n" "$RESOLVED"
				fi
			}
		done < "$FILE"
	}
else
	Err 1 "Directory '$DIR' not found."
fi
