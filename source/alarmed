#!/usr/bin/env bash
#cito M:755 O:0 G:0 T:/usr/bin/alarmed
#------------------------------------------------------------------------------
# Project Name      - Extra/source/alarmed
# Started On        - Fri 26 Feb 23:14:17 GMT 2021
# Last Change       - Thu 23 Dec 19:38:56 GMT 2021
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Incredibly simple CLI alarm clock in pure-BASH.
#
# Features:
#
# N/A
#
# Bugs:
#
# N/A
#
# Dependencies:
#
#   bash (>= 4.3-14)
#------------------------------------------------------------------------------

CurVer='2021-12-23'
Progrm='alarmed'

Usage() {
	while read; do
		printf '%s\n' "$REPLY"
	done <<-EOF
		Usage: $Progrm [OPTS] [HH:MM:SS]

		  -h, --help               - Display this help information.
		  -v, --version            - Output the version datestamp.
	EOF
}

Err() {
	printf 'Err: %s\n' "$2" 1>&2
	(( $1 > 0 )) && exit $1
}

Match='[[:digit:]][[:digit:]]:[[:digit:]][[:digit:]]:[[:digit:]][[:digit:]]'

while [ -n "$1" ]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf '%s\n' "$CurVer"; exit 0 ;;
		-*)
			Err 1 'Incorrect option(s) specified.' ;;
		*)
			break ;;
	esac
	shift
done

printf -v Current '%(%X)T' -1
CurrentInt=${Current//:}
TargetInt=${1//:}

if (( $# > 1 )); then
	Err 1 'Invalid argument(s) detected.'
elif [[ $1 != $Match ]]; then
	Err 1 'Invalid or non-existent alarm time.'
elif (( CurrentInt > TargetInt )); then
	Err 1 'Alarm time in the past.'
elif (( TargetInt > 235959 )); then
	Err 1 'Alarm time invalid.'
fi

while :; do
	printf -v Current '%(%X)T' -1
	if (( ${Current//:} == ${1//:} )); then
		printf '\r\b\e[91m%s / %s\e[0m ' "$Current" "$1"
		break
	else
		printf '\r%s / %s ' "$Current" "$1"
	fi

	# For accuracy, the interval is <1s.
	read -n 1 -st 0.001
done

printf '\n'
