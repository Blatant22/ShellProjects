#!/usr/bin/env bash
#cito M:755 O:0 G:0 T:/usr/bin/mplay
#------------------------------------------------------------------------------
# Project Name      - Extra/source/mplay
# Started On        - Sat 16 Sep 19:42:57 BST 2017
# Last Change       - Mon 20 Dec 08:47:15 GMT 2021
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Abandoned in favor of the recent Python3.6 rewrite, which turned out to be a
# surprising replacement. Reported bugs may be addressed, but new features or
# effort to update or optimize the code will probably not be made.
#
# The Python3.6 rewrite of `mplay` can be found in the PythonProjects
# repository on the same GitHub store from which this file originated.
#------------------------------------------------------------------------------

CurVer='2021-12-20'
Progrm=${0##*/}
ProgrmFancy='MPlay'

Err() {
	printf 'Err: %s\n' "$2" 1>&2
	(( $1 > 0 )) && exit $1
}

Domain="https://github.com"
ThemeDir="/usr/share/moc/themes"

Usage() {
	while read; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		Usage: $Progrm [OPTS] [PATH]

		  -h, --help               - Displays this help information.
		  -v, --version            - Output only the version datestamp.
		  -o, --run-once           - Exit the MOC server when closed.

		  To exit $ProgrmFancy, send the SIGINT (130) signal using the Ctrl + C
		  shortcut (^C). Your previous terminal layout will be restored.

		  When forcing, unsupported mimetypes and executables will be allowed.
	EOF
}

while [ -n "$1" ]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf "%s\n" "$CurVer"; exit 0 ;;
		--once|-o)
			Once='true' ;;
		-*)
			Err 1 "Incorrect argument(s) specified." ;;
	esac
	shift
done

if [ -z "$1" ]; then
	Err 1 'Please provide a directory in which to find music.'
elif ! [ -d "$1" ]; then
	Err 1 'Unable to find the given music directory.'
fi

[ -d $ThemeDir ] || Err 1 'Theme directory not found.'
[ -f "$ThemeDir/tfl_moc_theme" ] || Err 1 'Theme file not found.'
type -P mocp 2> /dev/null 1>&2 || Err 1 "Dependency 'mocp' not met."

mocp -n -T "$ThemeDir/tfl_moc_theme"          \
	-O ShowFormat=yes                         \
	-O ShowTime=no                            \
	-O Shuffle=no                             \
	-O HideFileExtension=yes                  \
	-O SavePlaylist=no                        \
	-O TagsCacheSize=3000                     \
	-O PlaylistNumbering=yes                  \
	-O Layout1="playlist(50%,50%,50%,50%)"    \
	-O FollowPlayedFile=yes                   \
	-O ModPlug_NoiseReduction=yes             \
	-O ModPlug_ResamplingMode=FIR             \
	-O CanStartInPlaylist=yes                 \
	-O ResampleMethod=SincMediumQuality       \
	-O UseMimeMagic=no                        \
	-O ShowHiddenFiles=no                     \
	-O InputBuffer=512                        \
	-O OutputBuffer=512                       \
	-O Prebuffering=256                       \
	-m "${1:-$HOME/Music}"                    \
|| Err 1 "Unable to start the MOC player."

if [ "$Once" == 'true' ]; then
	wait
	mocp -x
fi
