#!/usr/bin/env bash
#cito M:755 O:0 G:0 T:/usr/bin/autoscrot
#------------------------------------------------------------------------------
# Project Name      - Extra/source/autoscrot
# Started On        - Sun 17 Sep 05:06:50 BST 2017
# Last Change       - Sun 29 Nov 04:23:24 GMT 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Take screenshots at user-specified intervals with scrot(1).
#
# Dependencies:
#
#   bash (>= 4.3-14)
#   coreutils (>= 8.25-2)
#   scrot (>= 0.8-17)
#------------------------------------------------------------------------------

CurVer='2020-11-29'
Progrm=${0##*/}

Usage(){
	while read; do
		printf '%s\n' "$REPLY"
	done <<-EOF
		Usage: $Progrm [OPTS] [SCROT_ARGS]

		  -h, --help               - Display this help information.
		  -v, --version            - Output the version datestamp.
		  -i, --interval [INT]     - Where INT is seconds of interval.
		  -q, --quiet              - Quieter operation, with errors.

		  If no interval is provided, a default of '3' will be used.

		  The scrot arguments (via SCROT_ARGS) are optional. Due to the nature
		  of $Progrm, some arguments will make no sense to pass over to scrot
		  to process.

		  Images are saved using the default quality for JPG images.

		  Screenshots will be saved in: '~/Pictures/AutoScrot'
	EOF
}

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf '%s\n' "$CurVer"; exit 0 ;;
		--quiet|-q)
			BeQuiet='true' ;;
		--interval|-I)
			shift; Interval=$1
			if ! [[ ${Interval} =~ ^[0-9]+$ ]] || [ $Interval -lt 1 ]; then
				Err 1 'Invalid interval selected.'
			fi ;;
		-*)
			Err 1 'Incorrect argument specified.' ;;
		*)
			break ;;
	esac
	shift
done

DepCount=0
for Dep in scrot mkdir sleep; {
	if ! type -P "$Dep" &> /dev/null; then
		Err 0 "Dependency '$Dep' not met."
		let DepCount++
	fi
}

[ $DepCount -eq 0 ] || exit 1

[ "$BeQuiet" == 'true' ] && exec 1> /dev/null

printf "Press Ctrl + C to cancel and exit $Progrm.\n"

declare -i Num=0
while :; do
	sleep ${Interval:-3}s

	MainDir="$HOME/Pictures/AutoScrot"
	[ -d "$MainDir" ] || mkdir -p "$MainDir"
	printf -v FILENAME "%s/Screenshot_%(%F_%X)T.jpg" $MainDir -1

	if scrot $@ "$FILENAME"; then
		Num+=1
		printf "\rScreenshots taken:   %'d" "$Num"
	else
		Err 0 "Non-zero exit status for screenshot #${Num}."
	fi
done
printf "\n"
