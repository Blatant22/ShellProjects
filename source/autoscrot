#!/usr/bin/env bash
#cito M:755 O:0 G:0 T:/usr/bin/autoscrot
#------------------------------------------------------------------------------
# Project Name      - Extra/source/autoscrot
# Started On        - Sun 17 Sep 05:06:50 BST 2017
# Last Change       - Mon  3 Feb 16:17:41 GMT 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------

set -e
. /usr/lib/tflbp-sh/Err
. /usr/lib/tflbp-sh/ChkDep
set +e

CurVer='2020-02-03'
Progrm=${0##*/}

Usage(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            ${Progrm^^} ($CurVer)
		            Written by terminalforlife <terminalforlife@yahoo.com>

		            Take screenshots at user-specified intervals using scrot.

		SYNTAX:     $Progrm [OPTS] [SCROT_ARGS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output the version datestamp.
		            --quiet|-q              - Quieter operation, with errors.
		            --interval|-I N         - Where N is seconds of interval.

		NOTE:       If no interval is provided, a default of 3 will be used.

		            The scrot arguments (via SCROT_ARGS) are optional. Due to
		            the nature of $Progrm, some arguments will make no sense to
		            pass over to scrot to process.

		            Images are saved using the default quality for JPG images.

		FILE:       ~/Pictures/AutoScrot/
	EOF
}

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf "%s\n" "$CurVer"; exit 0 ;;
		--quiet|-q)
			BeQuiet='true' ;;
		--interval|-I)
			shift; Interval=$1
			if ! [[ ${Interval} =~ ^[0-9]+$ ]]\
			|| [ $Interval -lt 1 ]; then
				Err 1 "Invalid interval selected."
			fi ;;
		-*)
			Err 1 "Incorrect argument specified." ;;
		*)
			break ;;
	esac
	shift
done

ChkDep scrot mkdir sleep

[ "$BeQuiet" == 'true' ] && exec > /dev/null

printf "Press Ctrl + C to cancel and exit $Progrm.\n"

declare -i Num=0
while :; do
	sleep ${Interval:-3}s

	MainDir="$HOME/Pictures/AutoScrot"
	[ -d "$MainDir" ] || mkdir -p "$MainDir"
	printf -v FILENAME "%s/Screenshot_%(%F_%X)T.jpg" $MainDir -1

	if scrot $@ "$FILENAME"; then
		Num+=1
		printf "\rScreenshots taken:   %'d" "$Num"
	else
		Err 0 "Non-zero exit status for screenshot #${Num}."
	fi
done
printf "\n"
