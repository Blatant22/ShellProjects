#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - Extra/source/fix-ff-gtk
# Started On        - Fri 29 Mar 13:12:04 GMT 2019
# Last Change       - Wed 27 Nov 15:54:12 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

_VERSION_="2019-11-27"
_PROJECT_=${0##*/}

Err(){
	printf "[L%0.4d] ERROR: %s\n" "$2" "$3" 1>&2
	[ $1 -eq 1 ] && exit 1
}

FF="/usr/bin/firefox"

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            ${_PROJECT_^^} ($_VERSION_)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Psuedo-Fix colors used in Firefox when using a dark GTK theme.

		SYNTAX:     $_PROJECT_ [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --theme|-t NAME         - Where NAME is the chosen GTK theme.

		NOTES:      The GTK theme Adwaita, which distributions often have pre-installed, is
		            needed, unless another is specified.

		            This script will work globally, meaning ALL users, regardless of their
		            chosen theme, will use the Adwaita GTK theme for their use of Firefox.

		            This script basically edits $FF which is what is used when
		            you execute the firefox command. If you use a different executable, -
		            then this will not work for you.

		            Although this fix has worked for me for over a year, newer or older
		            versions of Firefox may execute or be scripted (aforementioned file) in
		            a different way, thus nullifying this script.

		            This script will likely not work on all distributions of Linux. It was
		            written in Ubuntu 16.04.6, and should work on all forms and likely
		            versions of Debian- and Ubuntu-based distributions of Linux.
	EOF
}

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"; exit 0 ;;
		--theme|-t)
			THEME="$2" ;;
		*)
			Err 1 $LINENO "Incorrect argument(s) specified." ;;
	esac
	shift
done

[ "$THEME" ] || THEME="Adwaita"

[ $UID -eq 0 ] || Err 1 $LINENO "Root access is required."

if ! type -fP sed > /dev/null 2>&1; then
	Err 1 $LINENO "Dependency '/bin/sed' not met."
fi

if ! [ -f "$FF" -a -r "$FF" -a -w "$FF" ]; then
	Err 1 $LINENO "File "$FF" not found or inaccessible."
fi

declare -i LINE=0
STRING='exec\ \$MOZ_LIBDIR\/\$MOZ_APP_NAME\ \"\$\@\"'

while read; do
	LINE+=1

	if [[ $REPLY =~ ^\ +$STRING ]] && [ $LINE -eq 110 ]; then
		if sed -in 110s/'^\(\s\+\)'"$STRING"/'\1GTK_THEME="'$THEME'" '"$STRING"/ "$FF"; then
			printf "File '%s' modified.\n" "$FF"
			exit 0
		else
			Err 1 $LINENO "File '$FF' failed during editing."
		fi
	elif [[ $REPLY =~ ^\ +GTK_THEME\=\"$THEME\"\ $STRING ]]; then
		printf "File '%s' already modified.\n" "$FF"
		exit 1
	fi
done < "$FF"

Err 1 $LINENO "File '$FF' contents unexpected."
