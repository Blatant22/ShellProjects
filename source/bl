#!/bin/sh
#cito M:755 O:0 G:0 T:/usr/bin/bl
#------------------------------------------------------------------------------
# Project Name      - Extra/source/bl
# Started On        - Thu 14 Sep 01:49:40 BST 2017
# Last Change       - Tue 23 Feb 16:40:40 GMT 2021
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# A [l]ite and portable version of [b]lkid(8) which should ordinarily not need
# 'root' privileges to run.
#
# This is really old script I should probably rewrite, but it works.
#------------------------------------------------------------------------------

CurVer='2021-02-23'
Progrm='bl'

Err(){
	printf 'ERROR: %s\n' "$2" 1>&2
	[ $1 -gt 0 ] && exit $1
}

Usage(){
	while read -r Line; do
		printf '%b\n' "$Line"
	done <<-EOF
		\rUsage: $Progrm [OPTS] [DEV_1 [DEV_2] ...]

		\r  -h, --help               - Display this help information.
		\r  -v, --version            - Output the version datestamp.
		\r  -L, --label [LABEL]      - Display only devices of LABEL.
		\r  -U, --uuid [UUID]        - Display only devices of UUID.

		\r  Display only the UUID for the following devices:

		\r    $Progrm -U=/dev/sda1 -U=/dev/sdb3

		\r  Display NAME,LABEL,UUID,FSTYPE,PARTUUID for devices:

		\r    $Progrm /dev/sdb1 /dev/sdg2 /dev/fd0

		\r  While this small program certainly couldn't replace blkid's entire
		\r  suite of functionalities, $Progrm is perhaps enough for most who
		\r  just need a UUID or LABEL.
	EOF
}


LSBLK_Format='name,label,uuid,fstype,partuuid'
ArgNum=0 # The number of short or long arguments.

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf "%s\n" "$CurVer"; exit 0 ;;
		--uuid|-U)
			shift

			UFlagActive='true'
			POrNot="-n"
			LSBLK_Format="uuid"
			ShowDev="${ShowDev:-} $1"
			ArgNum+=1 ;;
		--label|-L)
			shift

			LFlagActive='true'
			POrNot="-n"
			LSBLK_Format="label"
			ShowDev="${ShowDev:-} $1"
			ArgNum+=1 ;;
		/dev/*)
			[ $ArgNum -eq 0 ] && ShowDev="${ShowDev:-} $1" ;;
		*)
			Err 1 "Incorrect argument(s) specified." ;;
	esac
	shift
done

DepCount=0
for Dep in sed lsblk; do
	if ! command -v "$Dep" 1> /dev/null 2>&1; then
		Err 0 "Dependency '$DEP' not met."
		DepCount=$((DepCount + 1))
	fi
done

[ $DepCount -eq 0 ] || exit 1

if [ "$UFlagActive" = 'true' -a "$LFlagActive" = 'true' ]; then
	Err 1 "Unable to mix --uuid|-U and --label|-L flags."
fi

case $LSBLK_Format in
	label|uuid)
		if [ -z "$ShowDev" ]; then
			Err 1 "Missing a block device name."
		fi ;;
esac

MainFunc(){
	LSBLK(){
		lsblk ${POrNot:--P} -po $LSBLK_Format ${ShowDev} 2> /dev/null
	}

	# Format the output appropriately based on how lsblk is called.
	case $LSBLK_Format in
		uuid)
			LSBLK | sed 's/^UUID="\(.*\)"/\1/; /\(^$\|^[\t\s]\+$\)/d' ;;
		name)
			#TODO: Is this even used?
			LSBLK | sed 's/^LABEL="\(.*\)"/\1/; /\(^$\|^[\t\s]\+$\)/d' ;;
		*)
			LSBLK | sed -e 's/^NAME="\/dev\/\([[:alnum:]]\+\)"/\1:/'\
				-e 's/FSTYPE="/TYPE="/; /\(UUID=""\|FSTYPE=""\)/d'\
				-e 's/LABEL="" //; /\(^$\|^[\t\s]\+$\)/d' ;;
	esac
}

#TODO: Improve everything below and the use of the function above.

# To avoid recalling the same function.
MainVar=`MainFunc`

# Helps for those getting the exit status.
if [ -z "$MainVar" ]; then
	exit 2
else
	printf "%s\n" "$MainVar"
fi
