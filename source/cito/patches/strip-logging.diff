#------------------------------------------------------------------------------
# Project Name      - Extra/source/cito/patches/strip-logging.diff
# Started On        - Sat 29 Feb 03:37:27 GMT 2020
# Last Change       - Sat 29 Feb 04:35:40 GMT 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# NOTE: These patches require that `patch` (>= 2.7.5-1) is already installed.
#
# This patch completely removes ALL logging capabilities from Cito. This is
# currently tested and compatible with version 2020-02-29 (03:22:45) of Cito.
#
# NOTE: These patches are not suitable for versions of Cito installed via
#       Debian packages, although they should still work, version allowing.
#
# Install this patch by running the below commands, in order.
#
#   URL='https://raw.githubusercontent.com/terminalforlife/Extra'
#   (cd /tmp && wget "$URL/master/source/cito/patches/strip-logging.diff")
#
# Check everything patches okay:
#
#   patch --dry-run /usr/bin/cito /tmp/strip-logging.diff
#
# Then run the following command as root, if successful:
#
#   patch /usr/bin/cito /tmp/strip-logging.diff
#
# To reverse the patch, run the following as root:
#
#   patch -R /usr/bin/cito /tmp/strip-logging.diff
#------------------------------------------------------------------------------
6c6
< # Last Change       - Sat 29 Feb 03:22:45 GMT 2020
---
> # Last Change       - Sat 29 Feb 03:32:04 GMT 2020
39d38
< 		\r  -L, --log-view <TYPE>    - Show TYPE log entries for Cito.
44d42
< 		\r  -l, --nolog              - Disable the logging functionality.
55d52
< EventLog="/var/log/${Progrm}-events.log"
57d53
< LogTypes='all info warning error'
67,76d62
< 		--log-view|-L)
< 			LogView=$2
< 
< 			if [ -z "$LogView" ]; then
< 				Err 1 "Option '--log-view|-L' requires one of TYPE."
< 			fi
< 
< 			shift ;;
< 		--no-log|-l)
< 			SkipLog='true' ;;
111d96
< 
119d103
< 
125d108
< 
131d113
< 
137d118
< 
163,170d143
< if ! [ ${UID:-`id -u`} -eq 0 ]; then
< 	if ! [ "$SkipLog" = 'true' ]; then
< 		Err 1 'Root permissions required for system-wide changes.'
< 	fi
< 
< 	printf "CAUTION: Option '--no-log|-l' temporarily disables logging.\n" 1>&2
< fi
< 
189d161
< 			Logger error "Failed to 'cd' into '${MD5File%/*}'"
197,200c169
< 	if ! [ -f "$1" ]; then
< 		Logger error "File '$1' not found or has no read access"
< 		Err 1 "File '$1' missing or unreadable."
< 	fi
---
> 	[ -f "$1" ] || Err 1 "File '$1' missing or unreadable."
210,212d178
< 				Logger info "New MD5 for '$1' is '$GetHash'"
< 				Logger info "Old MD5 for '$1' is '$Hash'"
< 
214d179
< 					Logger error "MD5 mis-match for file '$1'"
225d189
< 			Logger error "Old MD5 hash missing for '$1'"
229d192
< 		Logger error "Hash file '$ReadHashFile' not found"
236,278d198
< Logger(){ # Usage: Logger TYPE MESSAGE
< 	[ "$SkipLog" = 'true' ] && return 2
< 
< 	LogTypeChk "$1" $LogTypes
< 
< 	[ -d "${EventLog%/*}" ] && mkdir -p "${EventLog%/*}" 1> /dev/null 2>&1
< 	[ -f "$EventLog" ] || 1> "$EventLog"
< 
< 	# Ensure it's still set safely.
< 	chown 0:0 "$EventLog" 1> /dev/null 2>&1
< 	chmod 600 "$EventLog" 1> /dev/null 2>&1
< 
< 	Secs=`date '+%s'` # <-- Seconds since Epoch.
< 	[ -z "$Secs" ] && Err 1 "Logging failure via 'Logger()' detected."
< 	printf "%d:%s:%s\n" $Secs "$1" "$2" >> "$EventLog"
< 
< 	unset TypeCount CurType Secs
< }
< 
< LogErrInf(){ # Usage: LogErrInf [$KEY] [KEY] [FILE]
< 	if [ -z "$1" ]; then
< 		Logger error "$2 is null for '$3'"
< 		Err 1 "Value for '$2' not set."
< 	else
< 		Logger info "$2 is '$1' for '$3'"
< 	fi
< }
< 
< LogTypeChk(){ # Usage: LogTypeChk [TYPE] [VALID_TYPES]
< 	CheckType=$1; shift
< 
< 	TypeCount=0
< 	for CurType in "$@"; do
< 		if [ "$CheckType" = "$CurType" ]; then
< 			TypeCount=$((TypeCount + 1))
< 		fi
< 	done
< 
< 	[ $TypeCount -eq 0 ] && Err 1 "Invalid 'Logger()' type."
< 
< 	unset CheckType TypeCount CurType
< }
< 
282,287d201
< 	if [ $Signal -eq 0 ]; then
< 		Logger info "Signal '$Signal' detected by 'SigHandler()'"
< 	else
< 		Logger warning "Signal '$Signal'  detected by 'SigHandler()'"
< 	fi
< 
289d202
< 		Logger error "File '$HashFile' and/or '$TemRemFile' failed removal"
291,292d203
< 	else
< 		Logger info "Removed '$HashFile' and '$TemRemFile'"
300,324d210
< if [ -n "$LogView" ]; then
< 	Logger info 'Attempting to view Cito log file'
< 	LogTypeChk "$LogView" $LogTypes
< 
< 	if [ -f "$EventLog" ]; then
< 		Logger info 'Viewing Cito log file'
< 		while IFS=':' read Epoch Type MSG; do
< 			ShowLog(){
< 				FTime=`date '+%F %X' --date="@$Epoch"`
< 				printf "%s: %s\n" "$FTime" "$MSG"
< 			}
< 
< 			if [ "$LogView" = "all" ]; then
< 				ShowLog
< 			elif [ "$Type" = "$LogView" ]; then
< 				ShowLog
< 			fi
< 		done < "$EventLog"
< 
< 		exit 0
< 	else
< 		Err 1 "File '$EventLog' not found."
< 	fi
< fi
< 
326,332c212
< 	Logger info "Checking existing of '$1'"
< 
< 	if ! [ -d "${1%/*}" ]; then
< 		Logger info "Directory '$1' not found"
< 
< 		Err 1 "Directory '${1%/*}' not found."
< 	fi
---
> 	[ -d "${1%/*}" ] || Err 1 "Directory '${1%/*}' not found."
350,351d229
< 			Logger info "File '$1' is supported by Cito"
< 
356,367c234,237
< 					M:*)
< 						Mode=${CurField#*:}
< 						LogErrInf "$Mode" Mode "$1" ;;
< 					O:*)
< 						Owner=${CurField#*:}
< 						LogErrInf "$Owner" Owner "$1" ;;
< 					G:*)
< 						Group=${CurField#*:}
< 						LogErrInf "$Group" Group "$1" ;;
< 					T:*)
< 						Target=${CurField#*:}
< 						LogErrInf "$Target" Target "$1" ;;
---
> 					M:*) Mode=${CurField#*:} ;;
> 					O:*) Owner=${CurField#*:} ;;
> 					G:*) Group=${CurField#*:} ;;
> 					T:*) Target=${CurField#*:} ;;
369d238
< 						Logger error "Field '$CurField' in '$1' is invalid"
394,398c263
< 	if chown "$1" "$2" 1> /dev/null 2>&1; then
< 		Logger info "Successfully changed '$2' to '$1'"
< 	else
< 		Logger error "Failed to change '$2' to '$1'"
< 	fi
---
> 	chown "$1" "$2" 1> /dev/null 2>&1
403,407c268
< 	if chmod "$1" "$2" 1> /dev/null 2>&1; then
< 		Logger info "Successfully changed '$2' to '$1'"
< 	else
< 		Logger error "Failed to change '$2' to '$1'"
< 	fi
---
> 	chmod "$1" "$2" 1> /dev/null 2>&1
411,412d271
< 	Logger warning "File '$1' in '${1%/*}' already exists"
< 
415,420c274
< 		Logger info "Overwriting pre-existing file '$1'"
< 
< 		if rm -f "$1" 1> /dev/null 2>&1; then
< 			Logger info "Overwrote pre-existing file '$1'"
< 		else
< 			Logger error "Failed to overwrite pre-existing file '$1'"
---
> 		if ! rm -f "$1" 1> /dev/null 2>&1; then
423,424d276
< 	else
< 		Logger info "NOT overwriting pre-existing file '$1'"
431d282
< 		Logger info "User specified '$UserSpec'"
448d298
< 	Logger info "URL for '$1' is '${URL#https://*/}'"
461,465c311
< 				if mv "$TemRemFile" "$Target" 1> /dev/null 2>&1; then
< 					Logger info "File '$TemRemFile' moved to '$Target'"
< 				else
< 					Logger error "File '$CurFile' failed to move to '$Target'"
< 				fi
---
> 				mv "$TemRemFile" "$Target" 1> /dev/null 2>&1
467d312
< 				Logger error "File '$CurFile' is NOT supported by Cito"
474d318
< 			Logger error 'No remote file specified'
478d321
< 		Logger error "File '$1' failed to download with '${DLCMD%% *}'"
484,485d326
< 	Logger info 'Beginning remote operation'
< 
495,496d335
< 	Logger info 'Beginning local operation'
< 
498,499d336
< 		Logger info "Processing '$CurFile'"
< 
508d344
< 					Logger info "File '$CurFile' moved to '$Target'"
512d347
< 					Logger error "File '$CurFile' failed to move to '$Target'"
516d350
< 				Logger error "File '$CurFile' is NOT supported by Cito"
522,523d355
< 		Logger info "Finished processing '$CurFile'"
< 
531d362
< Logger info 'Appears to be nothing to do'
