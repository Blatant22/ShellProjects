#!/bin/sh -e

#------------------------------------------------------------------------------
# Project Name      - Extra/source/tfl-ubuntu-setup
# Started On        - Thu 14 Jun 23:36:44 BST 2018
# Last Change       - Fri 28 Feb 21:06:00 GMT 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# This installation script is for use after installing via something like the
# `mini.iso` of Ubuntu 16.04, or after using rmne(8) and installing only the
# basics, like the kernel, UFW, etc. Would probably work on 18.04, however.
#------------------------------------------------------------------------------

CurVer='2020-02-28'
Progrm=${0##*/}

Err(){
	printf 'ERROR: %s\n' "$2" 1>&2
	[ $1 -gt 0 ] && exit $1
}

Usage(){
	while read -r CurLine; do
		printf '%b\n' "$CurLine"
	done <<-EOF
		\rUsage: $Progrm [OPTS]

		\r  -h, --help               - Display this help information.
		\r  -v, --version            - Output the version datestamp.
	EOF
}

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf '%s\n' "$CurVer"; exit 0 ;;
		*)
			Err 1 'Incorrect option(s) specified.' ;;
	esac
	shift
done

Count=0
for Dep in date sh mktemp apt-get id dpkg; do
	if ! command -v "$Dep" 1> /dev/null 2>&1; then
		Count=$((Count + 1))
		Err 0 "Dependency '$Dep' not met."
	fi
done

[ $Count -eq 0 ] || exit 1

[ `id -u` -eq 0 ] || Err 1 'Root access is required.'

Date=`date '+%F'`
GHUser='terminalforlife'
GitHub="https://raw.githubusercontent.com/$GHUser"
Pkgs="$GitHub/DEB-Packages/master"

AptOpts='-q -o Dpkg::Progress=true -o Dpkg::Progress-Fancy=true'

# If either `update` or `dist-upgrade` fails, quit.
apt-get $AptOpts update 1> /dev/null &&
	apt-get $AptOpts dist-upgrade 1> /dev/null || exit 1

for Pack in wget i3 feh i3lock scrot perl; do
	command -v $Pack 1> /dev/null 2>&1 && continue
	printf "Installing '$Pack' package...\n"
	if ! apt-get $AptOpts install $Pack 1> /dev/null; then
		Err 0 "Package '$Pack' failed to install."
	else
		printf 'Installation successful.\n'
	fi
done

TempDir=`mktemp -d`

# Install all of the latest TFL packages.
for Pkg in\
\
	libtflbp-sh libtfl-perl ubuchk kernelchk lsbins lspkg autoexec backmeup\
	apt-undo-install apt-download-deps clean-locales cpufreq feh-slides\
	fix-ff-gtk getip gitsap redshifter purgerc previewer notify-upgrade mplay\
	rmne roks seewttr shlides simplify-ubuntu suptime tudu ubuchk wcdl
do
	for Iter in 1 2; do
		case $Iter in
			1)
				printf "Fetching latest '$Pkg' package name.\n"
				Latest="$TempDir/latest"
				wget -qO "$Latest" "$Pkgs/$Pkg/latest" 1> /dev/null
				read Package < "$Latest" ;;
			2)
				printf "Downloading '$Pkg' package.\n"
				PkgFile="$TempDir/$Package"
				wget -qO "$PkgFile" "$Pkgs/$Pkg/$Package" 1> /dev/null
				printf "Installing '$Package' package.\n"
				dpkg -i "$PkgFile" 1> /dev/null ;;
		esac
	done
done

# Get dependencies for the above.
printf 'Downloading and installing dependencies.\n'
apt-get install -f 1> /dev/null

printf 'Clearing temporary directory.\n'
rm -r "$TempDir"

# Set safer permissions for certain directories.
for Dir in /boot /root /home/*; do
	if [ "$Dir" != '/home/lost+found' ]; then
		[ -d "$Dir" ] && chmod 700 "$Dir"
	fi
done

# Install all of the TFL BashConfig stuff.
cito -c -r "$GHUser" BashConfig master source/lad
for File in .bashrc .bash_aliases .bash_functions .profile; do
	printf "Downloading and installing '%s' file.\n" "$File"
	cito -c -M 600 -O 1000 -G 1000 -T "$HOME/$File"\
		-r "$GHUser" BashConfig master "source/$File"
done

# View today's Cito errors.
printf 'Displaying any Cito errors, if found.\n'
cito -L error | while read Line; do
	case $Line in
		"$Date "*) printf '%s\n' "${Line#* }" ;;
	esac
done
