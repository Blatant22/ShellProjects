#!/bin/bash
#cito M:755 O:0 G:0 T:/usr/bin/autosh
#----------------------------------------------------------------------------------
# Project Name      - Extra/source/autosh
# Started On        - Thu 31 Oct 22:49:41 GMT 2019
# Last Change       - Fri  6 Dec 22:45:46 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

#TODO - Needs an optional check for branch change.

_VERSION_="2019-12-06"
_PROJECT_=${0##*/}

Err(){
	printf "[L%0.4d] ERROR: %s\n" "$2" "$3" 1>&2
	[ $1 -eq 1 ] && exit 1
}

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            ${_PROJECT_^^} ($_VERSION_)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Development tool for shell programmers needing live updates.

		SYNTAX:     $_PROJECT_ [OPTS] SCRIPT ARGUMENTS

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --shell|-S NAME         - Use NAME instead of Bourne Again Shell.
	EOF
}

SHELL='bash'

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"; exit 0 ;;
		--shell|-S)
			shift

			if [ -z "$1" ]; then
				Err 1 $LINENO "Name of shell not provided."
			elif [ "$1" == 'bash' ]; then
				Err 1 $LINENO "The Bourne Again Shell is the default."
			elif ! type -fP "$1" > /dev/null 2>&1; then
				Err 1 $LINENO "Provided shell not found in PATH."
			else
				SHELL=$1
			fi ;;
		-*)
			Err 1 $LINENO "Incorrect argument(s) specified." ;;
		*)
			break ;;
	esac
	shift
done

declare -i DEPCOUNT=0
for DEP in tput sleep stat ${SHELL##*/}; {
	if ! type -fP "$DEP" > /dev/null 2>&1; then
		Err 0 $LINENO "Dependency '$DEP' not met."
		DEPCOUNT+=1
	fi
}

[ $DEPCOUNT -eq 0 ] || exit 1

[ "$BEQUIET" == 'true' ] && exec > /dev/null
[ "$DEBUGME" == 'true' ] && set -x

# SSE = Seconds Since Epoch. (used to figure if and when modified)

TRAP(){
	tput ed; tput rmcup
	exit 0
}

trap 'TRAP' SIGINT

tput smcup

while :; do
	if [ -f "$1" ] && [ -r "$1" ]; then
		SSE=`stat -c '%Y' "$1" 2> /dev/null`

		if [ 0${SSE_OLD//[!0-9]} -lt 0${SSE//[!0-9]} ]; then
			tput clear

			"$SHELL" $1 $2
		fi

		SSE_OLD=${SSE//[!0-9]}
	else
		tput ed; tput rmcup
		Err 1 $LINENO "File not found or inaccessible."
	fi

	sleep 0.5s # Half-second to help compensate for misalignment.
done

tput ed; tput rmcup
