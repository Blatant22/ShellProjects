#!/bin/sh
#lspkg M:755 O:0 G:0 T:/usr/bin/lspkg-installer
#------------------------------------------------------------------------------
# Project Name      - Extra/source/lspkg/lspkg-installer
# Started On        - Fri 19 Feb 00:55:56 GMT 2021
# Last Change       - Fri 19 Feb 00:56:04 GMT 2021
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Simple, but pretty and mindful Bourne Shell installer for LSPKG, for those
# unable or unwilling to use the provided Debian packages available in the
# DEB-Packages repository.
#
# To use this installer, you can either:
#
#   Clone the repository, using git(1) command.
#
#     OR
#
#   Download the archive of it directly from GitHub, then extract its contents.
#
# Since this installer just fetches from GitHub, you needn't actually download
# the entire Extra repository to install it; only the installer.
#
# If you want a HOME-only installation, you'll have to either use LSPKG, or
# otherwise install it manually, but you may miss out on a lot of features.
#
# Dependencies:
#
#   coreutils (>= 8.25-2)
#   curl (>= 7.47.0-1) | wget (>= 1.17.1-1)
#------------------------------------------------------------------------------

if command -v curl 1> /dev/null 2>&1; then
	DLCMD='curl -so'
elif command -v wget 1> /dev/null 2>&1; then
	DLCMD='wget -qO'
else
	printf "ERROR: Neither 'wget' nor 'curl' are available.\n" 1>&2
	exit 1
fi

if [ `id -u` -ne 0 ]; then
	printf "ERROR: Root access is required for system-wide changes.\n" 1>&2
	exit 1
fi

printf 'Install latest version of LSPKG? [Y/N] '
read Answer
case $Answer in
	[Yy]|[Yy][Ee][Ss])
		printf 'Continuing with installation.\n' ;;
	[Nn]|[Nn][Oo])
		printf 'Abandoning installation.\n'
		exit 0 ;;
	*)
		printf 'ERROR: Invalid response -- quitting.\n' 1>&2
		exit 2 ;;
esac

LogFile='/tmp/lspkg-installer.log'
[ -f "$LogFile" ] || 1> "$LogFile"
chmod 644 "$LogFile"

TmpDir=`mktemp -d --suffix '_tfl'`

URL='https://raw.githubusercontent.com/terminalforlife'
URL="$URL/Extra/master/source/lspkg"

SigHandler(){
	Sig=$?

	printf 'Cleaning up temporary files:\n'
	printf '* Removing '%s' ... ' "$TmpDir"
	ErrCount=0
	if rm -r "$TmpDir" 2>> "$LogFile"; then
		printf '\033[32m[OK]\033[0m\n'
	else
		printf '\033[31m[ERR]\033[0m\n'
	fi

	if [ -s "$LogFile" ]; then
		printf "Done! -- errors logged in: '${LogFile#$HOME}'\n"
	else
		printf 'Done!\n'
	fi

	exit $Sig
}

trap SigHandler EXIT INT QUIT ABRT TERM

printf 'Fetching files from GitHub:\n'
ErrCount=0
for File in\
	'completions' 'lspkg' 'lspkg-set' 'lspkg.1.gz' 'lspkg-set.1.gz'
do
	printf "* Downloading '%s' ... " "$File"
	if $DLCMD "$TmpDir/$File" "$URL/$File" 2>> "$LogFile"; then
		printf '\033[32m[OK]\033[0m\n'

		printf '* Verifying file contents ... '
		Contents=`< "$TmpDir/$File"`
		if [ "$(head -n 1 "$TmpDir/$File")" = '404: Not Found' ]; then
			ErrCount=$((ErrCount + 1))
			printf '\033[31m[ERR]\033[0m\n'
			rm "$TmpDir/$File" > /dev/null 2>&1
		else
			printf '\033[32m[OK]\033[0m\n'
		fi
	else
		ErrCount=$((ErrCount + 1))
		printf '\033[31m[ERR]\033[0m\n'
	fi
done

if [ $ErrCount -gt 0 ]; then
	printf 'ERROR: Failed to download one or more files.\n' 1>&2
	exit 1
fi

printf 'Setting correct file attributes:\n'

printf '* Assigning owner and group ... '
if chown 0:0 "$TmpDir"/* 2>> "$LogFile"; then
	printf '\033[32m[OK]\033[0m\n'
else
	printf '\033[31m[ERR]\033[0m\n'
fi

printf '* Assigning modes ... '
ErrCount=0
for File in\
	'lspkg:755' 'lspkg-set:755' 'completions:644'\
	'lspkg.1.gz:644' 'lspkg-set.1.gz:644'
do
	chmod ${File##*:} "$TmpDir/${File%:*}" 2>> "$LogFile" ||
		ErrCount=$((ErrCount + 1))
done

if [ $ErrCount -eq 0 ]; then
	printf '\033[32m[OK]\033[0m\n'
else
	printf '\033[31m[ERR]\033[0m\n'
fi

printf 'Moving files into place:\n'
ErrCount=0
for File in\
\
	'completions:/usr/share/bash-completion/completions/lspkg'\
	'lspkg-set.1.gz:/usr/share/man/man1/lspkg-set.1.gz'\
	'lspkg.1.gz:/usr/share/man/man1/lspkg.1.gz'\
	'lspkg-list:/usr/bin/lspkg-list'\
	'lspkg:/usr/bin/lspkg'
do
	printf "* Installing '%s' ... " "${File%%:*}"
	if mv "$TmpDir/${File%%:*}" "${File#*:}" 2>> "$LogFile"; then
		printf '\033[32m[OK]\033[0m\n'
	else
		printf '\033[31m[ERR]\033[0m\n'
	fi
done

printf 'Checking executables work:\n'

printf "* Verifying 'lspkg' ... "
if lspkg -v > /dev/null 2>&1; then
	printf '\033[32m[OK]\033[0m\n'
else
	printf '\033[31m[ERR]\033[0m\n'
fi

printf "* Verifying 'lspkg-set' ... "
if lspkg-set -v > /dev/null 2>&1; then
	printf '\033[32m[OK]\033[0m\n'
else
	printf '\033[31m[ERR]\033[0m\n'
fi
