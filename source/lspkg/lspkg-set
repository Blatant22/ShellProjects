#!/bin/sh
#cito M:755 O:0 G:0 T:/usr/bin/lspkg-set
#------------------------------------------------------------------------------
# Project Name      - Extra/source/lspkg/lspkg-set
# Started On        - Wed 24 Jan 17:31:41 GMT 2018
# Last Change       - Fri  3 Sep 13:10:39 BST 2021
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Features:
#
# N/A
#
# Bugs:
#
# N/A
#
# Dependencies:
#
#   bash (>= 4.3-14)
#   dpkg (>= 1.19.0.5)
#------------------------------------------------------------------------------

CurVer='2021-09-03'
Progrm='lspkg-set'

Usage(){
	while read -r CurLine; do
		printf '%b\n' "$CurLine"
	done <<-EOF
		\rUsage: $Progrm [OPTS]

		\r  -h, --help               - Display this help information.
		\r  -v, --version            - Output the version datestamp.
		\r  -E, --essential          - Display the essential packages.
		\r  -e, --extra              - Display the extra packages.
		\r  -I, --important          - Display the important packages.
		\r  -o, --optional           - Display the optional packages.
		\r  -R, --required           - Display the required packages.
	EOF
}

Err(){
	printf 'ERROR: %s\n' "$2" 1>&2
	[ $1 -gt 0 ] && exit $1
}

[ $# -eq 0 ] && Err 1 "One argument is required -- see: $Progrm -h"

case $* in
	--help|-h|-\?)
		Usage; exit 0 ;;
	--version|-v)
		printf '%s\n' "$CurVer"; exit 0 ;;
	--essential|-E)
		Type='Essential:yes' ;;
	--extra|-e)
		Type='Priority:extra' ;;
	--required|-R)
		Type='Priority:required' ;;
	--optional|-o)
		Type='Priority:optional' ;;
	--important|-I)
		Type='Priority:important' ;;
	*)
		Err 1 'Incorrect argument(s) specified.' ;;
esac

command -v dpkg-query 1> /dev/null 2>&1 ||
	Err 1 "Dependency 'dpkg-query' not met."

Format="\${db:Status-Abbrev} \${${Type%:*}} \${Package}\n"

dpkg-query -Wf "$Format" \* | while read F1 F2 F3 _; do
	if [ "$F1" = 'ii' -a "$F2" = "${Type#*:}" ]; then
		New=$F3

		[ "$New" = "$Old" ] && continue
		printf '%s\n' "$New"

		Old=$New
	fi
done
