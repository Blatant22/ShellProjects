#!/usr/bin/env bash
#cito M:755 O:0 G:0 T:/usr/bin/dwwdl
#------------------------------------------------------------------------------
# Project Name      - Extra/source/dwwdl
# Started On        - Sat 16 Sep 22:41:54 BST 2017
# Last Change       - Wed 15 Dec 23:45:59 GMT 2021
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# DistroWatch Weekly Downloader.
#
# Dependencies:
#
#   bash (>= 4.4.18-2)
#   coreutils (>= 8.25-2)
#   wget (>= 1.19.4-1)
#------------------------------------------------------------------------------

CurVer='2021-12-15'
Progrm=${0##*/}

Usage(){
	while read; do
		printf '%s\n' "$REPLY"
	done <<-EOF
		Usage: $Progrm [OPTS]

		  -h, --help               - Displays this help information.
		  -v, --version            - Output only the version datestamp.
		  --quiet-sleep            - Omit the sleep messages, if being kind.
		  --server-kind            - Use a random interval between downloads.
		  --show-progress          - Display the WGet download progress bar.
		  -d, --date [YYYYMMDD]    - Specify the podcast to download, by date.
		  -i, --interval [N]       - Use a specific interval between downloads.
		  -t, --type [OGG|MP3]     - Use file type of either 'OGG' or 'MP3'.

		  All podcasts will be downloaded to the current working directory and
		  are from newest to oldest, unless a date is specified.

		  Entries older than 20050822 were before DWW podcasts were available.
	EOF
}

Err(){
	printf 'Err: %s\n' "$2" 1>&2
	(( $1 > 0 )) && exit $1
}

ServerKind='false'
Interval=10
Extension='ogg'

DownloadURL="http://distrowatch.com/podcast/dww"

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf "%s\n" "$CurVer"; exit 0 ;;
		--server-kind)
			ServerKind='true' ;;
		--interval|-i)
			shift

			if [[ $1 =~ ^[0-9]+$ ]]; then
				Interval=$1
			else
				Err 1 "Incorrect interval."
			fi ;;
		--quiet-sleep)
			QuietSleep='true' ;;
		--show-progress)
			ProgressBar="--show-progress" ;;
		--type|-t)
			shift

			if [ "$1" == 'MP3' ] || [ "$1" == 'OGG' ]; then
				Extension=${1,,}
			else
				Err 1 "Incorrect file type selected."
			fi ;;
		--date|-d)
			shift

			if [[ $1 =~ ^[0-9]{8} ]]; then
				Podcasts+=" $1"
			else
				Err 1 "Incorrect podcast date provided."
			fi ;;
		*)
			Err 1 'Incorrect option(s) specified.' ;;
	esac
	shift
done

DepCount=0
for DEP in wget sync sleep; {
	if ! type -P "$DEP" &> /dev/null; then
		Err 0 "Dependency '$DEP' not met."
		let DepCount+=1
	fi
}

[ $DepCount -gt 0 ] && exit 1

if ! [ "$ServerKind" == 'true' ]; then
	if [ "$QuietSleep" == 'true' -o ! "$Interval" -eq 10 ]; then
		Err 1 "Expecting '--server-kind' argument."
	fi
fi

declare -i TimeCount=0

if [ -z "$Podcasts" ]; then
	#TODO: See about adding $OLDTONEW functionality here with pure shell.
	Podcasts=$(
		LINK="http://distrowatch.com/weekly.php?issue=1"

		while read -ra Line; do
			for A in ${Line[@]}; {
				if [[ $A == *\?issue\=* ]]; then
					printf "%s\n" ${A//[!0-9]/}
				fi
			}
		done <<< `wget -q "$LINK" -O -`
	)
fi

DownloadURL='http://distrowatch.com/podcast/dww'

for Date in $Podcasts; {
	[ $Date -lt 20050822 ] && continue

	[ "$ProgressBar" ] || printf "PODCAST: %s\n" "$Date"

	if [ "$ServerKind" == 'true' -a ! -f "${DL_LINK//*\/}" ]; then
		TimeCount+=1; printf -v RandomNumber "%0.5d" "$RANDOM"
		if ! [ "$QuietSleep" == 'true' ]; then
			printf "Sleeping for %d second(s)...\n" "${RandomNumber/????}"
		fi

		sleep ${RandomNumber/????}s

		if [ $Interval -eq 0 -a $TimeCount -eq $Interval ]; then
			printf -v RandomNumber "%0.5d" "$RANDOM"

			if ! [ "$QuietSleep" == 'true' ]; then
				printf "Sleeping for %d minute(s)...\n"\
					"${RandomNumber/????}"
			fi

			sleep ${RandomNumber/????}m
			TimeCount=0
		fi
	fi

	if ! wget -cq --no-cookies $ProgressBar $DownloadURL$Date.$Extension; then
		Err 0 "Podcast '$Date' failed."
	fi
}
