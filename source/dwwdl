#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - Extra/source/dwwdl (Distrowatch Weekly Downloader)
# Started On        - Sat 16 Sep 22:41:54 BST 2017
# Last Change       - Wed 27 Nov 15:54:07 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

_VERSION_="2019-11-27"
_PROJECT_=${0##*/}

Err(){
	printf "[L%0.4d] ERROR: %s\n" "$2" "$3" 1>&2
	[ $1 -eq 1 ] && exit 1
}

DLURL="http://distrowatch.com/podcast/dww"

USAGE(){
	while read; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            ${_PROJECT_^^} - Distrowatch Weekly Downloader ($_VERSION_)
		            Written by terminalforlife <terminalforlife@yahoo.com>

		            Download all of the available DistroWatch Weekly podcasts.

		SYNTAX:     $_PROJECT_ [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --server-kind           - A random number of seconds from 1-9 between
		                                      each image. An 'interval' also occurs for
		                                      every set of images, in minutes.
		            --interval|-i N         - Default value is set to 10. Error if missing
		                                      the above flag. Where N is an integer(s).
		                                      If N is '0', it will disable the feature.
		            --show-progress         - Output the wget 'bar' type progress.
		            --type|-t X             - Where X is the file type; either mp3 or ogg.
		            --date|-d N             - Where n is the number which corrosponds to
		                                      the date of the podcast you want to download.
		                                      An example of n would be 20170804.
		            --quiet-sleep           - Prevents the display of the sleep messages.
		                                      Only applicable if --server-kind is used.
		            --suspend|-s            - Suspend the system after $_PROJECT_ finishes.
		            --shutdown|-S           - Shut the system down after $_PROJECT_ finishes.

		NOTE:       All podcasts will be downloaded to the current working directory and
		            are from newest to oldest, unless --date=n is used.

		            Entries older than 20050822 were before DWW podcasts were available.

		SITE:       ${DLURL%/podcast/*}
	EOF
}

SERVER_KIND='false'
SLEEP_S=9
INTERVAL=10
EXT="ogg"

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"; exit 0 ;;
		--server-kind)
			SERVER_KIND='true' ;;
		--interval|-i)
			shift

			if [[ $1 =~ [0-9]+ ]]; then
				INTERVAL=$1
			else
				Err 1 $LINENO "Incorrect interval."
			fi ;;
		--quiet-sleep)
			QUIET_SLEEP='true' ;;
		--show-progress)
			PROGRESS="--show-progress" ;;
		--type|-t)
			shift

			if [[ $1 =~ ^(mp3|ogg)$ ]]; then
				EXT=$1
			else
				Err 1 $LINENO "Incorrect file type selected."
			fi ;;
		--date|-d)
			shift

			if [[ $1 =~ ^[0-9]{8} ]]; then
				PODS+=" $1"
			else
				Err 1 $LINENO "Incorrect podcast date provided."
			fi ;;
		--suspend|-s)
			SUSPEND='true'
			if ! type -fP systemctl > /dev/null 2>&1; then
				Err 1 $LINENO "Dependency 'systemctl' not met."
			fi ;;
		--shutdown|-S)
			SHUTDOWN='true'
			if ! type -fP shutdown > /dev/null 2>&1; then
				Err 1 $LINENO "Dependency 'shutdown' not met."
			fi ;;
		*)
			break ;;
	esac
	shift
done

declare -i DEPCOUNT=0
for DEP in wget sync sleep; {
	if ! type -fP "$DEP" > /dev/null 2>&1; then
		Err 0 $LINENO "Dependency '$DEP' not met."
		DEPCOUNT+=1
	fi
}

[ $DEPCOUNT -gt 0 ] && exit 1

[ "$*" ] && Err 1 $LINENO "Incorrect argument(s) detected."

if ! [ "$SERVER_KIND" == 'true' ]; then
	if [ "$QUIET_SLEEP" == 'true' -o ! "$INTERVAL" -eq 10 ]; then
		Err 1 $LINENO "Expecting '--server-kind' argument."
	fi
fi

declare -i TIME_COUNT=0

if ! [ "$PODS" ]; then
	#TODO: See about adding $OLDTONEW functionality here with pure shell.
	PODS=$(
		LINK="http://distrowatch.com/weekly.php?issue=1"

		while read -ra X; do
			for A in ${X[@]}; {
				if [[ $A == *\?issue\=* ]]; then
					printf "%s\n" ${A//[!0-9]/}
				fi
			}
		done <<< `wget -q "$LINK" -O -`
	)
fi

DLURL="http://distrowatch.com/podcast/dww"

for DATE in $PODS; {
	[ $DATE -lt 20050822 ] && continue

	[ "$PROGRESS" ] || printf "PODCAST: %s\n" "$DATE"

	if [ "$SERVER_KIND" == 'true' -a ! -f "${DL_LINK//*\/}" ]; then
		TIME_COUNT+=1; printf -v RAND "%0.5d" "$RANDOM"
		if ! [ "$QUIET_SLEEP" == 'true' ]; then
			printf "Sleeping for %d second(s)...\n" "${RAND/????}"
		fi

		sleep ${RAND/????}s

		if [ $INTERVAL -eq 0 -a $TIME_COUNT -eq $INTERVAL ]; then
			printf -v RAND "%0.5d" "$RANDOM"

			if ! [ "$QUIET_SLEEP" == 'true' ]; then
				printf "Sleeping for %d minute(s)...\n"\
					"${RAND/????}"
			fi

			sleep ${RAND/????}m
			TIME_COUNT=0
		fi
	fi

	if ! wget -cq --no-cookies $PROGRESS ${DLURL}${DATE}.${EXT}; then
		Err 0 $LINENO "Podcast '$DATE' failed."
	fi
}

if [ "$SHUTDOWN" == 'true' ]; then
	shutdown +3 &> /dev/null
	printf "%s\n" "Shutting down in 3 minutes..."
	read -n 1 -e -p "Type 'C' to cancel, or 'N' to shutdown now: " SHUTDOWN_PROMPT

	case ${SHUTDOWN_PROMPT:-EMPTY} in
		[Cc])
			shutdown --no-wall -c
			exit 0 ;;
		[Nn])
			shutdown --no-wall now ;;
		EMPTY|*)
			Err 1 $LINENO "Invalid response -- quitting." ;;
	esac
elif [ "$SUSPEND" == 'true' ]; then
	sync
	printf "%s\n" "System will suspend in 3s; type Ctrl+C to cancel and quit $_PROJECT_."
	sleep 3
	systemctl suspend
fi

