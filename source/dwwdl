#!/usr/bin/env bash
#cito M:755 O:0 G:0 T:/usr/local/bin/dwwdl
#------------------------------------------------------------------------------
# Project Name      - Extra/source/dwwdl
# Started On        - Sat 16 Sep 22:41:54 BST 2017
# Last Change       - Thu 19 May 00:12:32 BST 2022
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# DistroWatch Weekly Downloader.
#
# Dependencies:
#
#   bash (>= 4.4.18-2)
#   coreutils (>= 8.25-2)
#   wget (>= 1.19.4-1)
#------------------------------------------------------------------------------

CurVer='2022-05-19'
Progrm='dwwdl'

Usage() {
	read -d '' <<-EOF
		Usage: $Progrm [OPTS]

		  -h, --help               - Displays this help information.
		  -v, --version            - Output only the version datestamp.
		  --quiet-sleep            - Omit the sleep messages, if being kind.
		  --server-kind            - Use a random interval between downloads.
		  --show-progress          - Display the WGet download progress bar.
		  -d, --date YYYYMMDD      - Specify the podcast to download, by date.
		  -i, --interval N         - Use a specific interval between downloads.
		  -t, --type {OGG|MP3}     - Use file type of either 'OGG' or 'MP3'.

		  All podcasts will be downloaded to the current working directory and
		  are from newest to oldest, unless a date is specified.

		  Entries older than 20050822 were before DWW podcasts were available.
	EOF

	printf '%s' "$REPLY"
}

Err() {
	printf 'Err: %s\n' "$2" 1>&2
	(( $1 > 0 )) && exit $1
}

DownloadURL='http://distrowatch.com/podcast/dww'
ServerKind='False'
Interval=10
Ext='ogg'
Podcasts=()

while [[ -n $1 ]]; do
	case $1 in
		--help|-h)
			Usage; exit 0 ;;
		--version|-v)
			printf '%s\n' "$CurVer"; exit 0 ;;
		--server-kind)
			ServerKind='True' ;;
		--interval|-i)
			shift

			if [[ $1 =~ ^[0-9]+$ ]]; then
				Interval=$1
			else
				Err 1 'Incorrect interval.'
			fi ;;
		--quiet-sleep)
			QuietSleep='True' ;;
		--show-progress)
			ProgressBar='--show-progress' ;;
		--type|-t)
			shift

			if [[ $1 == MP3 || $1 == OGG ]]; then
				Ext=${1,,}
			else
				Err 1 'Incorrect file type selected.'
			fi ;;
		--date|-d)
			shift

			if [[ $1 =~ ^[0-9]{8} ]]; then
				Podcasts+=("$1")
			else
				Err 1 'Incorrect podcast date provided.'
			fi ;;
		*)
			Err 1 'Incorrect option(s) specified.' ;;
	esac
	shift
done

for CurDep in wget sync sleep; {
	if ! type -P "$CurDep" &> /dev/null; then
		Err 0 "Dependency '$CurDep' not met."
		(( DepCount++ ))
	fi
}

(( DepCount > 0 )) && exit 1

if ! [[ $ServerKind == True ]]; then
	if [[ $QuietSleep == True ]] || (( Interval != 10 )); then
		Err 1 "Expecting '--server-kind' argument."
	fi
fi

TimeCount=0

if [[ -z $Podcasts ]]; then
	#TODO: See about adding $OLDTONEW functionality here with pure shell.
	Link='http://distrowatch.com/weekly.php?issue=1'
	while read -ra Line; do
		for A in ${Line[@]}; {
			[[ $A == *\?issue\=* ]] && Podcasts+=("${A//[!0-9]/}")
		}
	done <<< "$(wget -qO - "$Link")"
fi

for Date in "${Podcasts[@]}"; {
	(( Date < 20050822 )) && continue

	[[ -z $ProgressBar ]] && printf 'PODCAST: %s\n' "$Date"
	if [[ $ServerKind == True && ! -f ${DL_LINK//*\/} ]]; then
		(( TimeCount++ ))

		printf -v RandomNumber '%0.5d' $RANDOM
		if ! [[ $QuietSleep == True ]]; then
			printf 'Sleeping for %d second(s)...\n' "${RandomNumber/????}"
		fi

		sleep ${RandomNumber/????}s

		if (( Interval == 0 && TimeCount == Interval )); then
			printf -v RandomNumber '%0.5d' $RANDOM
			if ! [[ $QuietSleep == True ]]; then
				printf 'Sleeping for %d minute(s)...\n' "${RandomNumber/????}"
			fi

			sleep ${RandomNumber/????}m
			TimeCount=0
		fi
	fi

	if ! wget -cq --no-cookies $ProgressBar "$DownloadURL$Date.$Ext"; then
		Err 0 "Podcast '$Date' failed."
	fi
}
