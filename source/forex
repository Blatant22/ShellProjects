#!/usr/bin/env bash
#cito M:755 O:0 G:0 T:/usr/bin/forex
#------------------------------------------------------------------------------
# Project Name      - Extra/source/forex
# Started On        - Sun 15 Oct 16:25:38 BST 2017
# Last Change       - Fri 21 Jan 23:40:33 GMT 2022
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Easily convert various currency rates straight from the terminal.
#------------------------------------------------------------------------------

CurVer='2022-01-21'
Progrm=${0##*/}

Usage(){
	while read; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		Usage: $Progrm [OPTS] SOURCE AMOUNT TARGET

		  -h, --help               - Displays this help information.
		  -v, --version            - Output only the version datestamp.
		  -R, --rounded            - Do not display as a floating point.
	EOF
}

Err(){
	printf 'Err: %s\n' "$2" 1>&2
	(( $1 > 0 )) && exit $1
}

Domain='https://www.foreignexchange.org.uk'

(( $# == 0 )) && Err 1 'Arguments required.'

while [[ -n $1 ]]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf '%s\n' "$CurVer"; exit 0 ;;
		--rounded|-R)
			Rounded='true' ;;
		-*)
			Err 1 'Incorrect argument(s) specified.' ;;
		*)
			break ;;
	esac
	shift
done

if ! type -P wget &> /dev/null; then
	Err 1 "Dependency 'wget' not met."
fi

Source=$1
Amount=$2
Target=$3

# Curent and historical currency abbreviations. Taken from: http://www.xe.com
Valids=(
	USD EUR GBP INR AUD CAD SGD CHF MYR JPY CNY NZD THB HUF AED HKD MXN ZAR PHP
	SEK IDR SAR BRL TRY KES KRW EGP IQD NOK KWD RUB DKK PKR ILS PLN QAR XAU OMR
	COP CLP TWD ARS CZK VND MAD JOD BHD XOF LKR UAH NGN TND UGX RON BDT PEN GEL
	XAF FJD VEF BYN HRK UZS BGN DZD IRR DOP ISK XAG CRC SYP LYD JMD MUR GHS AOA
	UYU AFN LBP XPF TTD TZS ALL XCD GTQ NPR BOB ZWD BBD CUC LAK BND BWP HNL PYG
	ETB NAD PGK SDG MOP NIO BMD KZT PAB BAM GYD YER MGA KYD MZN RSD SCR AMD SBD
	AZN SLL TOP BZD MWK GMD BIF SOS HTG GNF MVR MNT CDF STD TJS KPW MMK LSL LRD
	KGS GIP XPT MDL CUP KHR MKD VUV MRO ANG SZL CVE SRD XPD SVC BSD XDR RWF AWG
	DJF BTN KMF WST SPL ERN FKP SHP JEP TMT TVD IMP GGP ZMW
)

for Type in ${Valids[@]}; {
	[[ $Type == $Source ]] && SourceYes='true'
	[[ $Type == $Target ]] && TargetYes='true'
}

if ! [[ $SourceYes == true ]]; then
	Err 1 "Currency SOURCE '${Source:-?}' not recognised."
elif ! [[ $TargetYes == true ]]; then
	Err 1 "Currency TARGET '${Target:-?}' not recognised."
fi

Site="$Domain/fx-rates/conversion/$Amount/$Source/$Target"
while read -a Line; do
	if [[ ${Line[*]} =~ name=\"answer\" ]]; then
		Result=${Line[3]//[!0-9.]}
	fi
done <<< "$(wget -q -t 1 "$Site" -O -)"

if [[ $Result =~ ^[0-9.]+$ ]]; then
	if [[ $Rounded == true ]]; then
		printf '%s\n' "${Result%.*}"
	else
		printf '%.4f\n' "$Result"
	fi
else
	Err 1 'Unable to determine the correct result.'
fi
