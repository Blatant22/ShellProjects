#!/usr/bin/env bash
#cito M:755 O:0 G:0 T:/usr/bin/isbatlow
#------------------------------------------------------------------------------
# Project Name      - Extra/source/isbatlow
# Started On        - Sun  8 Apr 20:47:08 BST 2018
# Last Change       - Sun  2 Feb 23:57:15 GMT 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------

set -e
. /usr/lib/tflbp-sh/Err
. /usr/lib/tflbp-sh/ChkDep
set +e

CurVer='2020-02-02'
Progrm=${0##*/}

Domain='https://github.com'

Usage(){
	while read; do
		printf '%s\n' "$REPLY"
	done <<-EOF
		            ${Progrm^^} ($CurVer)
		            Written by terminalforlife <terminalforlife@yahoo.com>

		            Simple utility for laptops, to check if the battery is low.

		SYNTAX:     $Progrm [OPTS] [CMD]

		OPTS:       --help|-h|-?            - Display this help information.
		            --version|-v            - Output the version datestamp.
		            --battery|-B NAME       - Specify which battery to watch.
		            --interval|-I N         - Set interval, in seconds, to N.
		            --limit|-L N            - Set battery limit to N percent.

		NOTE:       Where CMD is one or more commands to run upon the battery
		            limit being detected, which is by default 15%, remaining.

		SITE:       $Domain/terminalforlife/Extra
	EOF
}

Battery='battery_BAT0'
Interval=30
Limit=15

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf '%s\n' "$CurVer"
			exit 0 ;;
		--debug|-D)
			DebugMe='true' ;;
		--interval|-I)
			shift
			if [[ $1 =~ ^[0-9]+$ ]] && [ $1 -gt 0 ]; then
				Limit=$1
			else
				Err 1 'Invalid interval specified.'
			fi ;;
		--limit|-L)
			shift
			if [[ $1 =~ ^[0-9]+$ ]] && [ $1 -gt 0 -a $1 -lt 100 ]; then
				Limit=$1
			else
				Err 1 'Invalid limit specified.'
			fi ;;
		--battery|-B)
			shift
			if ! [ "$1" ]; then
				Err 1 'Missing battery specification.'
			else
				Battery=$1
			fi ;;
		-*)
			Err 1 'Incorrect argument(s) specified.' ;;
		*)
			break ;;
	esac
	shift
done

#TODO: Use `/sys/class/power_supply` instead, or perhaps as an alternative.

DepChk notify-send on_ac_power sleep

if ! on_ac_power; then
	while IFS=":" read -a X; do
		if [ "${X[0]// }" == 'percentage' ]; then
			if ! [[ ${X[1]// } =~ ^[0-9]+%$ ]]; then
				notify-send --urgency=critical 'Unable to get valid battery value.'
				Err 0 'Unable to get valid percentile.'
			else
				if [ ${X[1]%\%} -le $Limit ]; then
					notify-send --urgency=critical 'Battery is critically low!'

					(
						$@
					)
				fi
			fi

			break
		fi
	done <<< "$(upower -i /org/freedesktop/UPower/devices/$Battery)"
	sleep ${Interval}s
fi
