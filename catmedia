#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - miscellaneous/catmedia
# Started On        - Sun 15 Oct 13:16:02 BST 2017
# Last Change       - Sun 15 Oct 18:37:00 BST 2017
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

XERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; exit 1; }
ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }

declare -i DEPCOUNT=0
for DEP in /usr/bin/ffmpeg /bin/rm; {
	[ -x "$DEP" ] || {
		ERR "$LINENO" "Dependency '$DEP' not met."
		DEPCOUNT+=1
	} && {
		[ "$DEP" == "/usr/bin/ffmpeg" ] && {
			read -a REPLY <<< `/usr/bin/ffmpeg -version`
			[[ "${REPLY[2]0:0:3}" == [0-9].[0-9] ]] || {
				XERR "$LINENO" "Unable to determine required version of ffmpeg."
			} 

			{ [ "${REPLY[2]3:0:1}" -ge 1 ] && [ "${REPLY[2]0:2:1}" -ge 1 ]; } || {
				XERR "$LINENO" "Version 1.1 or greater of ffmpeg required."
			}
		}
	}
}

[ $DEPCOUNT -eq 0 ] || exit 1

shopt -s extglob

USAGE(){
	while read -r; do
		echo "$REPLY"
	done <<-EOF
		            CATMEDIA (15th October 2017)
		            Written by terminalforlife (terminalforlife@yahoo.com)
		
		            Concatenate media files originally separated in parts.

		SYNTAX:     catmedia [OPTS] IN1 IN2 IN3 . . . OUT

		OPTS:       --help|-h|-?            - Displays this help information.
		            --debug|-D              - Enables the built-in bash debugging.
		            --quiet|-q              - Runs in quiet mode. Errors still output.

		WARNING:    This only works if you're IN the directory with the media parts.

		NOTE:       Where INPUT is the file parts to be concatenated, and OUTPUT is the
		            single file to be created from the INPUT files.

		            The -- argument can be used to explicitly indicate the end of OPTS.

		FILE:       A list of part files is temporarily stored in:

		              /tmp/filelist_\$RANDOM.txt

		            This file will be removed upon completion.
	EOF
}

TEMP="/tmp/filelist_$RANDOM.txt"
OUTPUT=""
INPUT=""

# Process the OPTS.
while [ "$1" ]; do
	case "$1" in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--debug|-D)
			DEBUGME="true" ;;
		--quiet|-q)
			BEQUIET="true" ;;
		--)
			break ;;
		-*|--*)
			XERR "$LINENO" "Incorrect OPT specified. See: --help|-h|-?" ;;
		*)
			break ;;
	esac

	shift
done

[ "$BEQUIET" == "true" ] && exec 1> /dev/null
[ "$DEBUGME" == "true" ] && set -xeu

# Process the input files.
declare -i INCOUNT=0
while [ "$1" ]; do
	# Ensures it doesn't count the output file.
	[ "$2" ] || break && shift

	INPUT+=" ${1// /%20}"
	INCOUNT+=1
done

OUTPUT="${1// /%20}"

[ $INCOUNT -eq 0 ] && XERR "$LINENO" "At least two inputs and an output is required."
[ "$OUTPUT" ] || XERR "$LINENO" "At least two inputs and an output is required."
[ -d /tmp ] || XERR "$LINENO" "Unable to access the /tmp directory."

[ $UID -eq 0 ] && XERR "$LINENO" "Root access isn't required."

# Creating the temporary file list for ffmpeg.
for PART in $INPUT; {
	echo "file '$PWD/${PART//%20/ }'"
} > "$TEMP"

# Concatenation begins here.
while read -a REPLY; do
	[[ "$REPLY" == frame=* ]] && {
		printf "\rPROGRESS: SIZE=\"${REPLY[5]/*=}\" TIME=\"${REPLY[6]/*=}\""
	} || continue
done <<< "$(
	/usr/bin/ffmpeg -v 0 -stats -f concat\
		-safe 0 -i "$TEMP" "${OUTPUT//%20/ }"
)"

# Clean up after self.
/bin/rm -f "$TEMP"

[ "$DEBUGME" == "true" ] && set +xeu || exit 0
