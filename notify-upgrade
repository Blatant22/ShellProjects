#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - notify-upgrade
# Started On        - Sun 17 Sep 16:07:59 BST 2017
# Last Change       - Tue 16 Apr 11:58:58 BST 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

_VERSION_="2019-04-16"

XERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; exit 1; }
ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            NOTIFY-UPGRADE ($_VERSION_)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Simple upgrade notifier for Debian- and Ubuntu-based systems.

		SYNTAX:     notify-upgrade [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --quiet|-q              - Runs in quiet mode. Errors still output.
		            --debug|-D              - Enables the built-in bash debugging.

		NOTE:       The default interval is 1 hour, in keeping with the included cron job.
	EOF
}

INT=60

while [ "$1" ]; do
	case "$1" in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"
			exit 0 ;;
		--quiet|-q)
			BEQUIET="true" ;;
		--debug|-D)
			DEBUGME="true" ;;
		--interval|-i)
			shift; INT="$1"

			if ! [[ "$INT" =~ ^[0-9]+$ ]]; then
				XERR "$LINENO" "Invalid, non-integer minute interval set."
			fi ;;
		*)
			XERR "$LINENO" "Incorrect argument(s) specified." ;;
	esac
	shift
done

declare -i DEPCOUNT=0
for DEP in /bin/sleep /usr/bin/{apt-get,notify-send}; {
	[ -x "$DEP" ] || {
		ERR "$LINENO" "Dependency '$DEP' not met."
		DEPCOUNT+=1
	}
}

[ $DEPCOUNT -eq 0 ] || exit 1

OPT='APT::Get::Show-User-Simulation-Note=0'

while :; do
        while read -a X; do
                if [[ "${X[*]}" == *not\ to\ upgrade. ]]; then
                        SUM="$((${X[0]}+${X[3]}))"
			MSG="APT: $SUM package(s) due for update."

                        if ! [[ "$SUM" =~ ^[0-9]+$ ]]; then
                                XERR "$LINENO" "Invalid SUM detected."
                        elif [ $SUM -gt 0 ]; then
				/usr/bin/notify-send --urgency=critical "$MSG"
                        fi

                        break
                fi
        done <<< "$(/usr/bin/apt-get -o "$OPT" -q -s dist-upgrade)"

	/bin/sleep ${INT}m
done

# vim: noexpandtab colorcolumn=84 tabstop=8 noswapfile nobackup
