#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - miscellaneous/notify-upgrade
# Started On        - Sun 17 Sep 16:07:59 BST 2017
# Last Change       - Thu 19 Oct 18:55:43 BST 2017
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

# Actually made this ages ago now; finally updating it. Still painful though.

#-----------------------------------------------------------------------MAIN CHECKS

SOUNDFILE="/usr/share/sounds/Oxygen-Im-Nudge.ogg"
LOGFILE="/var/log/notify-upgrade.log"

XERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; exit 1; }
ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }

declare -i DEPCOUNT=0
for DEP in /usr/bin/{apt-get,awk} /bin/{grep,sleep}; {
	[ -x "$DEP" ] || {
		ERR "$LINENO" "Dependency '$DEP' not met."
		DEPCOUNT+=1
	}
}

[ $DEPCOUNT -eq 0 ] || exit 0

[ $UID -eq 0 ] || XERR "$LINENO" "Root access is required."

#--------------------------------------------------------------------------THE LOOP

printf "%(%F (%X))T\n" 1>&2 >> "$LOGFILE"
declare -i NCOUNT=0
exec 2>> "$LOGFILE"

while :; do
	/usr/bin/apt-get update
	
	SUMMARY_OF_CHANGES=$(
		/usr/bin/apt-get upgrade -ys\
			| /bin/grep "[0-9].*, [0-9].*, [0-9].* [0-9].*\."
	)
	
	UPGRADE=$(
		echo $SUMMARY_OF_CHANGES\
			| /usr/bin/awk -S '{print $1,$2,$3}'\
			| /usr/bin/tr -d ","\
			| /usr/bin/awk -S '{print $1" package(s) to upgrade."}'
	)
	
	NEWLY_INSTALL=$(
		echo $SUMMARY_OF_CHANGES\
			| /usr/bin/awk -S '{print $4,$5,$6,$7}'\
			| /usr/bin/tr -d ","\
			| /usr/bin/awk -S '{print $1" new package(s) to install."}'
	)
	
	REMOVE=$(
		echo $SUMMARY_OF_CHANGES\
			| /usr/bin/awk -S '{print $8,$9,$10}'\
			| /usr/bin/awk -S '{print $1" package(s) to remove."}'
	)
	
	NOT_UPGRADE=$(
		echo $SUMMARY_OF_CHANGES\
			| /usr/bin/awk -S '{print $12,$13,$14,$15}'\
			| /usr/bin/tr -d ","\
			| /usr/bin/awk -S '{print $1" ignored package upgrade(s)."}'
	)
	
	echo "$UPGRADE" >> "$LOGFILE"
	echo "$NEWLY_INSTALL" >> "$LOGFILE"
	echo "$REMOVE" >> "$LOGFILE"
	echo "$NOT_UPGRADE" >> "$LOGFILE"
	echo >> "$LOGFILE"
	
	[ "$UPGRADE" == "0 package(s) to upgrade." ] || NCOUNT+=1
	[ "$NEWLY_INSTALL" == "0 new package(s) to install." ] || NCOUNT+=1
	[ "$REMOVE" == "0 package(s) to remove." ] || NCOUNT+=1
	[ "$NOT_UPGRADE" == "0 ignored package upgrade(s)." ] || NCOUNT+=1

        #----------------------------------------------------------------------BELL
	
	# If your bell sound is long and loud, this might be a bad idea, otherwise, if it's
	# a standard short, subtle bell sound, it works well enough. Had issues getting
	# pulseaudio to play audio due to the environment variables not being accessible.
	{ [ -f "$SOUNDFILE" ] && [ -r "$SOUNDFILE" ]; } && {
		[ $NCOUNT -gt 0 ] && {
			for X in {1..3}
			{
				for I in {1..7}
				{
					sleep 0.1
					printf "\a"
				}
	
				sleep 1
	
				for I in {1..7}
				{
					sleep 0.1
					printf "\a"
				}
	
				sleep 1
			}
		}
	}

	sleep 30m
done

exit 0
