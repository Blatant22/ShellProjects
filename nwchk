#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - miscellaneous/nwchk (Network Check)
# Started On        - Thu 18 Apr 11:19:19 BST 2019
# Last Change       - Thu 18 Apr 13:13:12 BST 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# Written by inspiration of YouTube user, 'S3NTYN3L'.
#----------------------------------------------------------------------------------

_VERSION_="2019-04-18"

XERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; exit 1; }
ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            NWCHK ($_VERSION_)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Check, once or periodically, for network connectivity.

		SYNTAX:     nwchk [OPTS] IFACE

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --quiet|-q              - Runs in quiet mode. Errors still output.
		            --debug|-D              - Enables the built-in bash debugging.
		            --logfile|-L PATH       - File to use instead of the default.
		            --no-log|-N             - Don't keep a log of detected events.
		            --internet|-I           - Check also for Internet connectivity.
		            --once-only|-o          - Don't check periodically, only once.
		            --interval|-i M         - Minutes (M) between checks.
		            --ping-addr|-p IP       - Address to ping connectivity checks.
		            --bell|-b               - Sound off the X11 bell on alert.

		NOTE:       Where IFACE is the network interface to check.

		            The default ping address is 8.8.8.8, Google's public DNS.

		            The default log file used is:

		              \$HOME/.nwchk.log
	EOF
}

while [ "$1" ]; do
	case "$1" in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"
			exit 0 ;;
		--quiet|-q)
			BEQUIET="true" ;;
		--debug|-D)
			DEBUGME="true" ;;
		--once-only|-o)
			ONCE="true" ;;
		--interval|-i)
			shift

			#TODO - Check for -i and -o.
			if ! [[ "$1" =~ ^[0-9]+$ ]]; then
				XERR "$LINENO" "Invalid interval provided."
			fi ;;
		--log|-N)
			LOG="true" ;;
		--logfile|-L)
			shift; LOGFILE="$1" ;;
		--internet|-I)
			INTERNET="true" ;;
		--ping-addr|-p)
			#TODO - Check address validity.
			shift; IP="$1" ;;
		--*)
			XERR "$LINENO" "Incorrect argument(s) specified." ;;
	esac
	shift
done

if ! [ "$*" ]; then
	XERR "$LINENO" "Missing user-specified network interface."
else
	if [ "${#@}" -gt 1 ]; then
		XERR "$LINENO" "Only one interface may be specified at one time."
	else
		IFACE="$1"
	fi
fi

declare -i DEPCOUNT=0
for DEP in /bin/sleep /bin/ping /usr/bin/notify-send; {
	if ! [ -x "$DEP" ]; then
		ERR "$LINENO" "Dependency '$DEP' not met."
		DEPCOUNT+=1
	fi
}

[ $DEPCOUNT -eq 0 ] || exit 1

if [ -x /bin/ip ]; then
	IP="true"
elif [ -x /sbin/ifconfig ];
	IFCONFIG="true"
else
	XERR "$LINENO" "Unable to find applicable executable."
fi

if [ "$INTERNET" == "true" -a ! -x /bin/ping ]; then
	XERR "$LINENO" "Dependency '/bin/ping' not met."
fi

# Prefer ip, if both are found, as ifconfig is deprecated.
[ "$IP" == "true" -a "$IFCONFIG" == "true" ] && unset IFCONFIG

[ -x /bin/systemctl ] && SYSD="true"

[ "$BEQUIET" == "true" ] && exec 1> /dev/null
[ "$DEBUGME" == "true" ] && set -x

NOTIFY(){
	#TODO - Add exclamation or other type of alert icon.
	if ! /usr/bin/notify-send --urgency=critical "$1"; then
		LOGIT=""
		XERR "$LINENO" "Unable to send a notification -- quitting."
	fi

	#TODO - Have this repeat, as once probably isn't enough.
	[ "$BELL" == "true" ] && printf "\a"
}

LOGIT(){
	if [ "$LOG" == "true" ]; then
		printf "%(%F_%X)T: %s\n" -1 "$1"
	fi
}

declare -i ERRS=0
while :; do
	if [ "$SYSD" == "true" ]; then
		if ! /bin/systemctl status network-online.target; then
			LOGIT ""
			ERRS+=1
		fi
	fi

	if [ "$INTERNET" == "true" ]; then
		if ! /bin/ping -q -c 1 ${IP:-8.8.8.8} 2>&1 > /dev/null; then
			LOGIT "Error(s) detected while pinging IP address."
			ERRS+=1
		fi
	fi

	if [ $ERRS -gt 0 ]; then
		LOGIT "Sending notification to the current user."
		NOTIFY ""
	fi

	if ! [ "$ONCE" == "true" ]; then
		/bin/sleep ${INT}m
	else
		break
	fi
done
